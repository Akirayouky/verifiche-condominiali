"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/migrate-foto/route";
exports.ids = ["app/api/migrate-foto/route"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("crypto");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("fs");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("http");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

module.exports = require("https");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("path");

/***/ }),

/***/ "punycode":
/*!***************************!*\
  !*** external "punycode" ***!
  \***************************/
/***/ ((module) => {

module.exports = require("punycode");

/***/ }),

/***/ "querystring":
/*!******************************!*\
  !*** external "querystring" ***!
  \******************************/
/***/ ((module) => {

module.exports = require("querystring");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("stream");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("url");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("zlib");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fmigrate-foto%2Froute&page=%2Fapi%2Fmigrate-foto%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fmigrate-foto%2Froute.ts&appDir=%2FUsers%2Fakirayouky%2FDesktop%2FSiti%2FCondomini%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fakirayouky%2FDesktop%2FSiti%2FCondomini&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fmigrate-foto%2Froute&page=%2Fapi%2Fmigrate-foto%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fmigrate-foto%2Froute.ts&appDir=%2FUsers%2Fakirayouky%2FDesktop%2FSiti%2FCondomini%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fakirayouky%2FDesktop%2FSiti%2FCondomini&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _Users_akirayouky_Desktop_Siti_Condomini_src_app_api_migrate_foto_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/app/api/migrate-foto/route.ts */ \"(rsc)/./src/app/api/migrate-foto/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/migrate-foto/route\",\n        pathname: \"/api/migrate-foto\",\n        filename: \"route\",\n        bundlePath: \"app/api/migrate-foto/route\"\n    },\n    resolvedPagePath: \"/Users/akirayouky/Desktop/Siti/Condomini/src/app/api/migrate-foto/route.ts\",\n    nextConfigOutput,\n    userland: _Users_akirayouky_Desktop_Siti_Condomini_src_app_api_migrate_foto_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/migrate-foto/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZtaWdyYXRlLWZvdG8lMkZyb3V0ZSZwYWdlPSUyRmFwaSUyRm1pZ3JhdGUtZm90byUyRnJvdXRlJmFwcFBhdGhzPSZwYWdlUGF0aD1wcml2YXRlLW5leHQtYXBwLWRpciUyRmFwaSUyRm1pZ3JhdGUtZm90byUyRnJvdXRlLnRzJmFwcERpcj0lMkZVc2VycyUyRmFraXJheW91a3klMkZEZXNrdG9wJTJGU2l0aSUyRkNvbmRvbWluaSUyRnNyYyUyRmFwcCZwYWdlRXh0ZW5zaW9ucz10c3gmcGFnZUV4dGVuc2lvbnM9dHMmcGFnZUV4dGVuc2lvbnM9anN4JnBhZ2VFeHRlbnNpb25zPWpzJnJvb3REaXI9JTJGVXNlcnMlMkZha2lyYXlvdWt5JTJGRGVza3RvcCUyRlNpdGklMkZDb25kb21pbmkmaXNEZXY9dHJ1ZSZ0c2NvbmZpZ1BhdGg9dHNjb25maWcuanNvbiZiYXNlUGF0aD0mYXNzZXRQcmVmaXg9Jm5leHRDb25maWdPdXRwdXQ9JnByZWZlcnJlZFJlZ2lvbj0mbWlkZGxld2FyZUNvbmZpZz1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUFzRztBQUN2QztBQUNjO0FBQzBCO0FBQ3ZHO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixnSEFBbUI7QUFDM0M7QUFDQSxjQUFjLHlFQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxZQUFZO0FBQ1osQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLFFBQVEsaUVBQWlFO0FBQ3pFO0FBQ0E7QUFDQSxXQUFXLDRFQUFXO0FBQ3RCO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDdUg7O0FBRXZIIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY29uZG9taW5pLXB3YS8/NGZkYSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBcHBSb3V0ZVJvdXRlTW9kdWxlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLW1vZHVsZXMvYXBwLXJvdXRlL21vZHVsZS5jb21waWxlZFwiO1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLWtpbmRcIjtcbmltcG9ydCB7IHBhdGNoRmV0Y2ggYXMgX3BhdGNoRmV0Y2ggfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9saWIvcGF0Y2gtZmV0Y2hcIjtcbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCIvVXNlcnMvYWtpcmF5b3VreS9EZXNrdG9wL1NpdGkvQ29uZG9taW5pL3NyYy9hcHAvYXBpL21pZ3JhdGUtZm90by9yb3V0ZS50c1wiO1xuLy8gV2UgaW5qZWN0IHRoZSBuZXh0Q29uZmlnT3V0cHV0IGhlcmUgc28gdGhhdCB3ZSBjYW4gdXNlIHRoZW0gaW4gdGhlIHJvdXRlXG4vLyBtb2R1bGUuXG5jb25zdCBuZXh0Q29uZmlnT3V0cHV0ID0gXCJcIlxuY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgQXBwUm91dGVSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuQVBQX1JPVVRFLFxuICAgICAgICBwYWdlOiBcIi9hcGkvbWlncmF0ZS1mb3RvL3JvdXRlXCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9hcGkvbWlncmF0ZS1mb3RvXCIsXG4gICAgICAgIGZpbGVuYW1lOiBcInJvdXRlXCIsXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiYXBwL2FwaS9taWdyYXRlLWZvdG8vcm91dGVcIlxuICAgIH0sXG4gICAgcmVzb2x2ZWRQYWdlUGF0aDogXCIvVXNlcnMvYWtpcmF5b3VreS9EZXNrdG9wL1NpdGkvQ29uZG9taW5pL3NyYy9hcHAvYXBpL21pZ3JhdGUtZm90by9yb3V0ZS50c1wiLFxuICAgIG5leHRDb25maWdPdXRwdXQsXG4gICAgdXNlcmxhbmRcbn0pO1xuLy8gUHVsbCBvdXQgdGhlIGV4cG9ydHMgdGhhdCB3ZSBuZWVkIHRvIGV4cG9zZSBmcm9tIHRoZSBtb2R1bGUuIFRoaXMgc2hvdWxkXG4vLyBiZSBlbGltaW5hdGVkIHdoZW4gd2UndmUgbW92ZWQgdGhlIG90aGVyIHJvdXRlcyB0byB0aGUgbmV3IGZvcm1hdC4gVGhlc2Vcbi8vIGFyZSB1c2VkIHRvIGhvb2sgaW50byB0aGUgcm91dGUuXG5jb25zdCB7IHJlcXVlc3RBc3luY1N0b3JhZ2UsIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzIH0gPSByb3V0ZU1vZHVsZTtcbmNvbnN0IG9yaWdpbmFsUGF0aG5hbWUgPSBcIi9hcGkvbWlncmF0ZS1mb3RvL3JvdXRlXCI7XG5mdW5jdGlvbiBwYXRjaEZldGNoKCkge1xuICAgIHJldHVybiBfcGF0Y2hGZXRjaCh7XG4gICAgICAgIHNlcnZlckhvb2tzLFxuICAgICAgICBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlXG4gICAgfSk7XG59XG5leHBvcnQgeyByb3V0ZU1vZHVsZSwgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MsIG9yaWdpbmFsUGF0aG5hbWUsIHBhdGNoRmV0Y2gsICB9O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1hcHAtcm91dGUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fmigrate-foto%2Froute&page=%2Fapi%2Fmigrate-foto%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fmigrate-foto%2Froute.ts&appDir=%2FUsers%2Fakirayouky%2FDesktop%2FSiti%2FCondomini%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fakirayouky%2FDesktop%2FSiti%2FCondomini&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./src/app/api/migrate-foto/route.ts":
/*!*******************************************!*\
  !*** ./src/app/api/migrate-foto/route.ts ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _scripts_migrate_foto_cloudinary__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/scripts/migrate-foto-cloudinary */ \"(rsc)/./src/scripts/migrate-foto-cloudinary.ts\");\n/**\n * API Route per migrazione foto Base64 → Cloudinary\n * POST /api/migrate-foto\n * \n * ATTENZIONE: Usa solo in sviluppo con backup database!\n */ \n\nasync function POST(request) {\n    try {\n        // Security check - solo in sviluppo\n        if (false) {}\n        const { action, lavorazioneId } = await request.json();\n        console.log(\"\\uD83D\\uDD04 API Migrazione foto - Action:\", action);\n        switch(action){\n            case \"migrate-all\":\n                console.log(\"\\uD83D\\uDE80 Avvio migrazione completa...\");\n                const risultato = await (0,_scripts_migrate_foto_cloudinary__WEBPACK_IMPORTED_MODULE_1__.migrateFotoToCloudinary)();\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    success: true,\n                    message: \"Migrazione completata\",\n                    data: risultato\n                });\n            case \"test-single\":\n                if (!lavorazioneId) {\n                    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                        success: false,\n                        error: \"lavorazioneId richiesto per test\"\n                    }, {\n                        status: 400\n                    });\n                }\n                console.log(`🧪 Test migrazione singola lavorazione: ${lavorazioneId}`);\n                const risultatoTest = await (0,_scripts_migrate_foto_cloudinary__WEBPACK_IMPORTED_MODULE_1__.testMigrazioneLavorazione)(lavorazioneId);\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    success: true,\n                    message: \"Test migrazione completato\",\n                    data: risultatoTest\n                });\n            default:\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    success: false,\n                    error: \"Action non valida. Usa: migrate-all o test-single\"\n                }, {\n                    status: 400\n                });\n        }\n    } catch (error) {\n        console.error(\"❌ Errore API migrazione:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: false,\n            error: \"Errore interno durante migrazione\",\n            details: error instanceof Error ? error.message : \"Errore sconosciuto\"\n        }, {\n            status: 500\n        });\n    }\n}\n// GET per info migrazione\nasync function GET() {\n    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n        success: true,\n        message: \"API Migrazione Foto Base64 → Cloudinary\",\n        endpoints: {\n            \"POST /api/migrate-foto\": {\n                description: \"Esegui migrazione foto\",\n                actions: {\n                    \"migrate-all\": \"Migra tutte le lavorazioni con foto Base64\",\n                    \"test-single\": \"Test migrazione singola lavorazione (richiede lavorazioneId)\"\n                },\n                example: {\n                    \"migrate-all\": '{ \"action\": \"migrate-all\" }',\n                    \"test-single\": '{ \"action\": \"test-single\", \"lavorazioneId\": \"uuid\" }'\n                }\n            }\n        },\n        warning: \"Disponibile solo in sviluppo. Fai sempre backup prima della migrazione!\"\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvYXBwL2FwaS9taWdyYXRlLWZvdG8vcm91dGUudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7OztDQUtDLEdBRXNEO0FBQytDO0FBRS9GLGVBQWVHLEtBQUtDLE9BQW9CO0lBQzdDLElBQUk7UUFDRixvQ0FBb0M7UUFDcEMsSUFBSUMsS0FBeUIsRUFBYyxFQVExQztRQUVELE1BQU0sRUFBRUssTUFBTSxFQUFFQyxhQUFhLEVBQUUsR0FBRyxNQUFNUCxRQUFRRSxJQUFJO1FBRXBETSxRQUFRQyxHQUFHLENBQUMsOENBQW9DSDtRQUVoRCxPQUFRQTtZQUNOLEtBQUs7Z0JBQ0hFLFFBQVFDLEdBQUcsQ0FBQztnQkFDWixNQUFNQyxZQUFZLE1BQU1iLHlGQUF1QkE7Z0JBRS9DLE9BQU9ELHFEQUFZQSxDQUFDTSxJQUFJLENBQUM7b0JBQ3ZCQyxTQUFTO29CQUNUUSxTQUFTO29CQUNUQyxNQUFNRjtnQkFDUjtZQUVGLEtBQUs7Z0JBQ0gsSUFBSSxDQUFDSCxlQUFlO29CQUNsQixPQUFPWCxxREFBWUEsQ0FBQ00sSUFBSSxDQUN0Qjt3QkFBRUMsU0FBUzt3QkFBT0MsT0FBTztvQkFBbUMsR0FDNUQ7d0JBQUVDLFFBQVE7b0JBQUk7Z0JBRWxCO2dCQUVBRyxRQUFRQyxHQUFHLENBQUMsQ0FBQyx3Q0FBd0MsRUFBRUYsY0FBYyxDQUFDO2dCQUN0RSxNQUFNTSxnQkFBZ0IsTUFBTWYsMkZBQXlCQSxDQUFDUztnQkFFdEQsT0FBT1gscURBQVlBLENBQUNNLElBQUksQ0FBQztvQkFDdkJDLFNBQVM7b0JBQ1RRLFNBQVM7b0JBQ1RDLE1BQU1DO2dCQUNSO1lBRUY7Z0JBQ0UsT0FBT2pCLHFEQUFZQSxDQUFDTSxJQUFJLENBQ3RCO29CQUFFQyxTQUFTO29CQUFPQyxPQUFPO2dCQUFvRCxHQUM3RTtvQkFBRUMsUUFBUTtnQkFBSTtRQUVwQjtJQUVGLEVBQUUsT0FBT0QsT0FBTztRQUNkSSxRQUFRSixLQUFLLENBQUMsNEJBQTRCQTtRQUMxQyxPQUFPUixxREFBWUEsQ0FBQ00sSUFBSSxDQUN0QjtZQUNFQyxTQUFTO1lBQ1RDLE9BQU87WUFDUFUsU0FBU1YsaUJBQWlCVyxRQUFRWCxNQUFNTyxPQUFPLEdBQUc7UUFDcEQsR0FDQTtZQUFFTixRQUFRO1FBQUk7SUFFbEI7QUFDRjtBQUVBLDBCQUEwQjtBQUNuQixlQUFlVztJQUNwQixPQUFPcEIscURBQVlBLENBQUNNLElBQUksQ0FBQztRQUN2QkMsU0FBUztRQUNUUSxTQUFTO1FBQ1RNLFdBQVc7WUFDVCwwQkFBMEI7Z0JBQ3hCQyxhQUFhO2dCQUNiQyxTQUFTO29CQUNQLGVBQWU7b0JBQ2YsZUFBZTtnQkFDakI7Z0JBQ0FDLFNBQVM7b0JBQ1AsZUFBZTtvQkFDZixlQUFlO2dCQUNqQjtZQUNGO1FBQ0Y7UUFDQUMsU0FBUztJQUNYO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jb25kb21pbmktcHdhLy4vc3JjL2FwcC9hcGkvbWlncmF0ZS1mb3RvL3JvdXRlLnRzPzBiYzkiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBBUEkgUm91dGUgcGVyIG1pZ3JhemlvbmUgZm90byBCYXNlNjQg4oaSIENsb3VkaW5hcnlcbiAqIFBPU1QgL2FwaS9taWdyYXRlLWZvdG9cbiAqIFxuICogQVRURU5aSU9ORTogVXNhIHNvbG8gaW4gc3ZpbHVwcG8gY29uIGJhY2t1cCBkYXRhYmFzZSFcbiAqL1xuXG5pbXBvcnQgeyBOZXh0UmVxdWVzdCwgTmV4dFJlc3BvbnNlIH0gZnJvbSAnbmV4dC9zZXJ2ZXInXG5pbXBvcnQgeyBtaWdyYXRlRm90b1RvQ2xvdWRpbmFyeSwgdGVzdE1pZ3JhemlvbmVMYXZvcmF6aW9uZSB9IGZyb20gJ0Avc2NyaXB0cy9taWdyYXRlLWZvdG8tY2xvdWRpbmFyeSdcblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIFBPU1QocmVxdWVzdDogTmV4dFJlcXVlc3QpIHtcbiAgdHJ5IHtcbiAgICAvLyBTZWN1cml0eSBjaGVjayAtIHNvbG8gaW4gc3ZpbHVwcG9cbiAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKFxuICAgICAgICB7IFxuICAgICAgICAgIHN1Y2Nlc3M6IGZhbHNlLCBcbiAgICAgICAgICBlcnJvcjogJ01pZ3JhemlvbmUgZGlzcG9uaWJpbGUgc29sbyBpbiBzdmlsdXBwbyBwZXIgc2ljdXJlenphJyBcbiAgICAgICAgfSxcbiAgICAgICAgeyBzdGF0dXM6IDQwMyB9XG4gICAgICApXG4gICAgfVxuXG4gICAgY29uc3QgeyBhY3Rpb24sIGxhdm9yYXppb25lSWQgfSA9IGF3YWl0IHJlcXVlc3QuanNvbigpXG5cbiAgICBjb25zb2xlLmxvZygn8J+UhCBBUEkgTWlncmF6aW9uZSBmb3RvIC0gQWN0aW9uOicsIGFjdGlvbilcblxuICAgIHN3aXRjaCAoYWN0aW9uKSB7XG4gICAgICBjYXNlICdtaWdyYXRlLWFsbCc6XG4gICAgICAgIGNvbnNvbGUubG9nKCfwn5qAIEF2dmlvIG1pZ3JhemlvbmUgY29tcGxldGEuLi4nKVxuICAgICAgICBjb25zdCByaXN1bHRhdG8gPSBhd2FpdCBtaWdyYXRlRm90b1RvQ2xvdWRpbmFyeSgpXG4gICAgICAgIFxuICAgICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oe1xuICAgICAgICAgIHN1Y2Nlc3M6IHRydWUsXG4gICAgICAgICAgbWVzc2FnZTogJ01pZ3JhemlvbmUgY29tcGxldGF0YScsXG4gICAgICAgICAgZGF0YTogcmlzdWx0YXRvXG4gICAgICAgIH0pXG5cbiAgICAgIGNhc2UgJ3Rlc3Qtc2luZ2xlJzpcbiAgICAgICAgaWYgKCFsYXZvcmF6aW9uZUlkKSB7XG4gICAgICAgICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKFxuICAgICAgICAgICAgeyBzdWNjZXNzOiBmYWxzZSwgZXJyb3I6ICdsYXZvcmF6aW9uZUlkIHJpY2hpZXN0byBwZXIgdGVzdCcgfSxcbiAgICAgICAgICAgIHsgc3RhdHVzOiA0MDAgfVxuICAgICAgICAgIClcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnNvbGUubG9nKGDwn6eqIFRlc3QgbWlncmF6aW9uZSBzaW5nb2xhIGxhdm9yYXppb25lOiAke2xhdm9yYXppb25lSWR9YClcbiAgICAgICAgY29uc3QgcmlzdWx0YXRvVGVzdCA9IGF3YWl0IHRlc3RNaWdyYXppb25lTGF2b3JhemlvbmUobGF2b3JhemlvbmVJZClcbiAgICAgICAgXG4gICAgICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbih7XG4gICAgICAgICAgc3VjY2VzczogdHJ1ZSxcbiAgICAgICAgICBtZXNzYWdlOiAnVGVzdCBtaWdyYXppb25lIGNvbXBsZXRhdG8nLFxuICAgICAgICAgIGRhdGE6IHJpc3VsdGF0b1Rlc3RcbiAgICAgICAgfSlcblxuICAgICAgZGVmYXVsdDpcbiAgICAgICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKFxuICAgICAgICAgIHsgc3VjY2VzczogZmFsc2UsIGVycm9yOiAnQWN0aW9uIG5vbiB2YWxpZGEuIFVzYTogbWlncmF0ZS1hbGwgbyB0ZXN0LXNpbmdsZScgfSxcbiAgICAgICAgICB7IHN0YXR1czogNDAwIH1cbiAgICAgICAgKVxuICAgIH1cblxuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoJ+KdjCBFcnJvcmUgQVBJIG1pZ3JhemlvbmU6JywgZXJyb3IpXG4gICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKFxuICAgICAgeyBcbiAgICAgICAgc3VjY2VzczogZmFsc2UsIFxuICAgICAgICBlcnJvcjogJ0Vycm9yZSBpbnRlcm5vIGR1cmFudGUgbWlncmF6aW9uZScsXG4gICAgICAgIGRldGFpbHM6IGVycm9yIGluc3RhbmNlb2YgRXJyb3IgPyBlcnJvci5tZXNzYWdlIDogJ0Vycm9yZSBzY29ub3NjaXV0bydcbiAgICAgIH0sXG4gICAgICB7IHN0YXR1czogNTAwIH1cbiAgICApXG4gIH1cbn1cblxuLy8gR0VUIHBlciBpbmZvIG1pZ3JhemlvbmVcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBHRVQoKSB7XG4gIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbih7XG4gICAgc3VjY2VzczogdHJ1ZSxcbiAgICBtZXNzYWdlOiAnQVBJIE1pZ3JhemlvbmUgRm90byBCYXNlNjQg4oaSIENsb3VkaW5hcnknLFxuICAgIGVuZHBvaW50czoge1xuICAgICAgJ1BPU1QgL2FwaS9taWdyYXRlLWZvdG8nOiB7XG4gICAgICAgIGRlc2NyaXB0aW9uOiAnRXNlZ3VpIG1pZ3JhemlvbmUgZm90bycsXG4gICAgICAgIGFjdGlvbnM6IHtcbiAgICAgICAgICAnbWlncmF0ZS1hbGwnOiAnTWlncmEgdHV0dGUgbGUgbGF2b3JhemlvbmkgY29uIGZvdG8gQmFzZTY0JyxcbiAgICAgICAgICAndGVzdC1zaW5nbGUnOiAnVGVzdCBtaWdyYXppb25lIHNpbmdvbGEgbGF2b3JhemlvbmUgKHJpY2hpZWRlIGxhdm9yYXppb25lSWQpJ1xuICAgICAgICB9LFxuICAgICAgICBleGFtcGxlOiB7XG4gICAgICAgICAgJ21pZ3JhdGUtYWxsJzogJ3sgXCJhY3Rpb25cIjogXCJtaWdyYXRlLWFsbFwiIH0nLFxuICAgICAgICAgICd0ZXN0LXNpbmdsZSc6ICd7IFwiYWN0aW9uXCI6IFwidGVzdC1zaW5nbGVcIiwgXCJsYXZvcmF6aW9uZUlkXCI6IFwidXVpZFwiIH0nXG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9LFxuICAgIHdhcm5pbmc6ICdEaXNwb25pYmlsZSBzb2xvIGluIHN2aWx1cHBvLiBGYWkgc2VtcHJlIGJhY2t1cCBwcmltYSBkZWxsYSBtaWdyYXppb25lISdcbiAgfSlcbn0iXSwibmFtZXMiOlsiTmV4dFJlc3BvbnNlIiwibWlncmF0ZUZvdG9Ub0Nsb3VkaW5hcnkiLCJ0ZXN0TWlncmF6aW9uZUxhdm9yYXppb25lIiwiUE9TVCIsInJlcXVlc3QiLCJwcm9jZXNzIiwianNvbiIsInN1Y2Nlc3MiLCJlcnJvciIsInN0YXR1cyIsImFjdGlvbiIsImxhdm9yYXppb25lSWQiLCJjb25zb2xlIiwibG9nIiwicmlzdWx0YXRvIiwibWVzc2FnZSIsImRhdGEiLCJyaXN1bHRhdG9UZXN0IiwiZGV0YWlscyIsIkVycm9yIiwiR0VUIiwiZW5kcG9pbnRzIiwiZGVzY3JpcHRpb24iLCJhY3Rpb25zIiwiZXhhbXBsZSIsIndhcm5pbmciXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./src/app/api/migrate-foto/route.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/cloudinary.ts":
/*!*******************************!*\
  !*** ./src/lib/cloudinary.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   deleteFotoCloudinary: () => (/* binding */ deleteFotoCloudinary),\n/* harmony export */   getFotoLavorazione: () => (/* binding */ getFotoLavorazione),\n/* harmony export */   getOptimizedImageUrl: () => (/* binding */ getOptimizedImageUrl),\n/* harmony export */   getThumbnailUrl: () => (/* binding */ getThumbnailUrl),\n/* harmony export */   uploadFotoLavorazione: () => (/* binding */ uploadFotoLavorazione)\n/* harmony export */ });\n/* harmony import */ var cloudinary__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! cloudinary */ \"(rsc)/./node_modules/cloudinary/cloudinary.js\");\n/* harmony import */ var cloudinary__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(cloudinary__WEBPACK_IMPORTED_MODULE_0__);\n/**\n * Configurazione Cloudinary per gestione foto delle lavorazioni\n */ \n// Configurazione server-side\ncloudinary__WEBPACK_IMPORTED_MODULE_0__.v2.config({\n    cloud_name: process.env.CLOUDINARY_CLOUD_NAME,\n    api_key: process.env.CLOUDINARY_API_KEY,\n    api_secret: process.env.CLOUDINARY_API_SECRET\n});\n/**\n * Upload foto su Cloudinary con organizzazione per lavorazioni\n */ const uploadFotoLavorazione = async (fotoBase64, lavorazioneId, fotoIndex)=>{\n    try {\n        // Genera public_id univoco: lavorazione-{id}/foto-{index}-{timestamp}\n        const timestamp = Date.now();\n        const publicId = `lavorazioni/${lavorazioneId}/foto-${fotoIndex}-${timestamp}`;\n        console.log(\"\\uD83D\\uDCE4 Uploading foto to Cloudinary:\", {\n            lavorazioneId,\n            fotoIndex,\n            publicId\n        });\n        // Upload su Cloudinary\n        const result = await cloudinary__WEBPACK_IMPORTED_MODULE_0__.v2.uploader.upload(fotoBase64, {\n            public_id: publicId,\n            folder: \"condomini-app/lavorazioni\",\n            resource_type: \"image\",\n            transformation: [\n                // Ottimizzazione automatica\n                {\n                    quality: \"auto\",\n                    fetch_format: \"auto\"\n                },\n                // Resize se troppo grande\n                {\n                    width: 1920,\n                    height: 1920,\n                    crop: \"limit\"\n                }\n            ],\n            // Genera anche thumbnail\n            eager: [\n                {\n                    width: 300,\n                    height: 300,\n                    crop: \"fill\",\n                    quality: \"auto\"\n                },\n                {\n                    width: 150,\n                    height: 150,\n                    crop: \"thumb\",\n                    gravity: \"face\"\n                }\n            ]\n        });\n        console.log(\"✅ Foto uploaded successfully:\", result.secure_url);\n        return {\n            url: result.secure_url,\n            publicId: result.public_id\n        };\n    } catch (error) {\n        console.error(\"❌ Errore upload Cloudinary:\", error);\n        throw new Error(\"Errore durante l'upload della foto\");\n    }\n};\n/**\n * Elimina foto da Cloudinary\n */ const deleteFotoCloudinary = async (publicId)=>{\n    try {\n        console.log(\"\\uD83D\\uDDD1️ Deleting foto from Cloudinary:\", publicId);\n        const result = await cloudinary__WEBPACK_IMPORTED_MODULE_0__.v2.uploader.destroy(publicId);\n        console.log(\"✅ Foto deleted:\", result);\n        return result.result === \"ok\";\n    } catch (error) {\n        console.error(\"❌ Errore eliminazione Cloudinary:\", error);\n        return false;\n    }\n};\n/**\n * Genera URL ottimizzato per diverse dimensioni\n */ const getOptimizedImageUrl = (publicId, options = {})=>{\n    const { width = 800, height, quality = \"auto\", crop = \"limit\" } = options;\n    return cloudinary__WEBPACK_IMPORTED_MODULE_0__.v2.url(publicId, {\n        width,\n        height,\n        quality,\n        crop,\n        fetch_format: \"auto\"\n    });\n};\n/**\n * Ottieni URL thumbnail\n */ const getThumbnailUrl = (publicId, size = 150)=>{\n    return cloudinary__WEBPACK_IMPORTED_MODULE_0__.v2.url(publicId, {\n        width: size,\n        height: size,\n        crop: \"thumb\",\n        gravity: \"face\",\n        quality: \"auto\",\n        fetch_format: \"auto\"\n    });\n};\n/**\n * Lista tutte le foto di una lavorazione\n */ const getFotoLavorazione = async (lavorazioneId)=>{\n    try {\n        const result = await cloudinary__WEBPACK_IMPORTED_MODULE_0__.v2.search.expression(`folder:condomini-app/lavorazioni/${lavorazioneId}`).sort_by(\"created_at\", \"desc\").execute();\n        return result.resources.map((resource)=>({\n                url: resource.secure_url,\n                publicId: resource.public_id,\n                createdAt: resource.created_at\n            }));\n    } catch (error) {\n        console.error(\"❌ Errore recupero foto lavorazione:\", error);\n        return [];\n    }\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (cloudinary__WEBPACK_IMPORTED_MODULE_0__.v2);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/cloudinary.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/supabase.ts":
/*!*****************************!*\
  !*** ./src/lib/supabase.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   dbQuery: () => (/* binding */ dbQuery),\n/* harmony export */   supabase: () => (/* binding */ supabase)\n/* harmony export */ });\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @supabase/supabase-js */ \"(rsc)/./node_modules/@supabase/supabase-js/dist/module/index.js\");\n\nconst supabaseUrl = \"https://ygvlcikgzkoaxlrmwsnv.supabase.co\" || 0;\nconst supabaseKey = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InlndmxjaWtnemtvYXhscm13c252Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTkzOTgzMzgsImV4cCI6MjA3NDk3NDMzOH0.Zc6eihyJiTZy6WicV6MyIgZ1Oq7GwzRYR01zovQHFPs\" || 0;\nconst supabase = (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__.createClient)(supabaseUrl, supabaseKey);\n// Funzioni helper per il database\nconst dbQuery = {\n    // Condomini\n    condomini: {\n        getAll: ()=>supabase.from(\"condomini\").select(\"*\").order(\"data_inserimento\", {\n                ascending: false\n            }),\n        create: (data)=>supabase.from(\"condomini\").insert([\n                data\n            ]).select().single(),\n        getById: (id)=>supabase.from(\"condomini\").select(\"*\").eq(\"id\", id).single(),\n        update: (id, data)=>supabase.from(\"condomini\").update(data).eq(\"id\", id).select().single(),\n        delete: (id)=>supabase.from(\"condomini\").delete().eq(\"id\", id)\n    },\n    // Tipologie\n    tipologie: {\n        getAll: ()=>supabase.from(\"tipologie_verifiche\").select(\"*\").order(\"data_creazione\", {\n                ascending: false\n            }),\n        create: (data)=>supabase.from(\"tipologie_verifiche\").insert([\n                data\n            ]).select().single(),\n        getById: (id)=>supabase.from(\"tipologie_verifiche\").select(\"*\").eq(\"id\", id).single(),\n        update: (id, data)=>supabase.from(\"tipologie_verifiche\").update(data).eq(\"id\", id).select().single(),\n        delete: (id)=>supabase.from(\"tipologie_verifiche\").delete().eq(\"id\", id)\n    },\n    // Verifiche\n    verifiche: {\n        getAll: ()=>supabase.from(\"verifiche\").select(\"*\").order(\"data_creazione\", {\n                ascending: false\n            }),\n        create: (data)=>supabase.from(\"verifiche\").insert([\n                data\n            ]).select().single(),\n        getById: (id)=>supabase.from(\"verifiche\").select(\"*\").eq(\"id\", id).single(),\n        update: (id, data)=>supabase.from(\"verifiche\").update(data).eq(\"id\", id).select().single(),\n        delete: (id)=>supabase.from(\"verifiche\").delete().eq(\"id\", id)\n    },\n    // Lavorazioni\n    lavorazioni: {\n        getAll: ()=>supabase.from(\"lavorazioni\").select(\"*\").order(\"data_apertura\", {\n                ascending: false\n            }),\n        create: (data)=>supabase.from(\"lavorazioni\").insert([\n                data\n            ]).select().single(),\n        getById: (id)=>supabase.from(\"lavorazioni\").select(\"*\").eq(\"id\", id).single(),\n        update: (id, data)=>supabase.from(\"lavorazioni\").update(data).eq(\"id\", id).select().single(),\n        delete: (id)=>supabase.from(\"lavorazioni\").delete().eq(\"id\", id)\n    },\n    // Users\n    users: {\n        getAll: ()=>supabase.from(\"users\").select(\"id, username, email, role, nome, cognome, telefono, attivo, created_at, last_login, approved_at\").order(\"created_at\", {\n                ascending: false\n            }),\n        create: (data)=>supabase.from(\"users\").insert([\n                data\n            ]).select(\"id, username, email, role, nome, cognome, telefono, attivo, created_at\").single(),\n        getById: (id)=>supabase.from(\"users\").select(\"id, username, email, role, nome, cognome, telefono, attivo, created_at, last_login, approved_at\").eq(\"id\", id).single(),\n        getByIdFull: (id)=>supabase.from(\"users\").select(\"*\").eq(\"id\", id).single(),\n        getByUsername: (username)=>supabase.from(\"users\").select(\"*\").eq(\"username\", username).single(),\n        getByEmail: (email)=>supabase.from(\"users\").select(\"*\").eq(\"email\", email).single(),\n        update: (id, data)=>supabase.from(\"users\").update(data).eq(\"id\", id).select(\"id, username, email, role, nome, cognome, telefono, attivo, created_at, last_login, approved_at\").single(),\n        updateLastLogin: (id)=>supabase.from(\"users\").update({\n                last_login: new Date().toISOString()\n            }).eq(\"id\", id),\n        delete: (id)=>supabase.from(\"users\").delete().eq(\"id\", id)\n    },\n    // Note Personali\n    note_personali: {\n        getAll: ()=>supabase.from(\"note_personali\").select(\"*\").order(\"data_creazione\", {\n                ascending: false\n            }),\n        getAllByUser: (utente_id)=>supabase.from(\"note_personali\").select(\"*\").eq(\"utente_id\", utente_id).order(\"data_creazione\", {\n                ascending: false\n            }),\n        create: (data)=>supabase.from(\"note_personali\").insert([\n                data\n            ]).select().single(),\n        getById: (id)=>supabase.from(\"note_personali\").select(\"*\").eq(\"id\", id).single(),\n        update: (id, data)=>supabase.from(\"note_personali\").update(data).eq(\"id\", id).select().single(),\n        delete: (id)=>supabase.from(\"note_personali\").delete().eq(\"id\", id)\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/supabase.ts\n");

/***/ }),

/***/ "(rsc)/./src/scripts/migrate-foto-cloudinary.ts":
/*!************************************************!*\
  !*** ./src/scripts/migrate-foto-cloudinary.ts ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   migrateFotoToCloudinary: () => (/* binding */ migrateFotoToCloudinary),\n/* harmony export */   testMigrazioneLavorazione: () => (/* binding */ testMigrazioneLavorazione)\n/* harmony export */ });\n/* harmony import */ var _lib_supabase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/lib/supabase */ \"(rsc)/./src/lib/supabase.ts\");\n/* harmony import */ var _lib_cloudinary__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/cloudinary */ \"(rsc)/./src/lib/cloudinary.ts\");\n/**\n * Script di migrazione foto da Base64 a Cloudinary\n * \n * IMPORTANTE: Eseguire solo dopo aver configurato Cloudinary!\n * \n * Questo script:\n * 1. Query tutte le lavorazioni con foto Base64\n * 2. Upload foto su Cloudinary\n * 3. Update database con URL Cloudinary\n * 4. Backup Base64 prima di eliminare\n */ \n\n/**\n * Migrazione completa foto Base64 → Cloudinary\n */ async function migrateFotoToCloudinary() {\n    console.log(\"\\uD83D\\uDD04 Inizio migrazione foto Base64 → Cloudinary\");\n    try {\n        // 1. Query lavorazioni con foto Base64\n        const { data: lavorazioni, error } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"lavorazioni\").select(\"id, allegati\").not(\"allegati\", \"is\", null);\n        if (error) {\n            throw new Error(`Errore query lavorazioni: ${error.message}`);\n        }\n        if (!lavorazioni || lavorazioni.length === 0) {\n            console.log(\"✅ Nessuna lavorazione con allegati trovata\");\n            return {\n                success: true,\n                migrazioni: 0\n            };\n        }\n        console.log(`📊 Trovate ${lavorazioni.length} lavorazioni con allegati`);\n        let migrazioniSuccesso = 0;\n        let errori = [];\n        // 2. Processa ogni lavorazione\n        for (const lavorazione of lavorazioni){\n            try {\n                console.log(`🔄 Processando lavorazione ${lavorazione.id}`);\n                const risultato = await migrateLavorazioneFoto(lavorazione);\n                if (risultato.success) {\n                    migrazioniSuccesso++;\n                    console.log(`✅ Lavorazione ${lavorazione.id} migrata con successo`);\n                } else {\n                    errori.push({\n                        lavorazioneId: lavorazione.id,\n                        error: risultato.error\n                    });\n                    console.error(`❌ Errore lavorazione ${lavorazione.id}:`, risultato.error);\n                }\n                // Pausa tra le migrazioni per evitare rate limiting\n                await new Promise((resolve)=>setTimeout(resolve, 1000));\n            } catch (error) {\n                errori.push({\n                    lavorazioneId: lavorazione.id,\n                    error: error instanceof Error ? error.message : \"Errore sconosciuto\"\n                });\n                console.error(`❌ Errore critico lavorazione ${lavorazione.id}:`, error);\n            }\n        }\n        console.log(`🎉 Migrazione completata: ${migrazioniSuccesso}/${lavorazioni.length} successi`);\n        if (errori.length > 0) {\n            console.log(\"❌ Errori riscontrati:\");\n            errori.forEach((err)=>console.log(`  - ${err.lavorazioneId}: ${err.error}`));\n        }\n        return {\n            success: true,\n            totali: lavorazioni.length,\n            migrazioni: migrazioniSuccesso,\n            errori: errori\n        };\n    } catch (error) {\n        console.error(\"❌ Errore critico migrazione:\", error);\n        return {\n            success: false,\n            error: error instanceof Error ? error.message : \"Errore sconosciuto\"\n        };\n    }\n}\n/**\n * Migra le foto di una singola lavorazione\n */ async function migrateLavorazioneFoto(lavorazione) {\n    try {\n        const allegati = lavorazione.allegati;\n        // Verifica se ci sono foto Base64 da migrare\n        const fotoBase64 = troveFotoBase64(allegati);\n        if (fotoBase64.length === 0) {\n            return {\n                success: true,\n                message: \"Nessuna foto Base64 trovata\"\n            };\n        }\n        console.log(`📸 Trovate ${fotoBase64.length} foto Base64 da migrare`);\n        // Upload foto su Cloudinary\n        const fotoCloudinary = [];\n        const erroriUpload = [];\n        for(let i = 0; i < fotoBase64.length; i++){\n            try {\n                const risultatoUpload = await (0,_lib_cloudinary__WEBPACK_IMPORTED_MODULE_1__.uploadFotoLavorazione)(fotoBase64[i], lavorazione.id, i);\n                fotoCloudinary.push({\n                    url: risultatoUpload.url,\n                    publicId: risultatoUpload.publicId,\n                    thumbnailUrl: risultatoUpload.url.replace(\"/upload/\", \"/upload/w_150,h_150,c_thumb/\"),\n                    createdAt: new Date().toISOString(),\n                    migratedFrom: \"base64\"\n                });\n                console.log(`  ✅ Foto ${i + 1} uploadata su Cloudinary`);\n            } catch (error) {\n                erroriUpload.push({\n                    index: i,\n                    error: error instanceof Error ? error.message : \"Errore upload\"\n                });\n                console.error(`  ❌ Errore upload foto ${i + 1}:`, error);\n            }\n        }\n        if (fotoCloudinary.length === 0) {\n            return {\n                success: false,\n                error: \"Nessuna foto uploadata su Cloudinary\"\n            };\n        }\n        // Backup allegati originali\n        const allegatiBackup = {\n            ...allegati,\n            _backup: {\n                originalBase64Foto: fotoBase64,\n                migratedAt: new Date().toISOString(),\n                migratedCount: fotoCloudinary.length\n            }\n        };\n        // Aggiorna allegati con foto Cloudinary\n        const nuoviAllegati = {\n            ...allegati,\n            foto: fotoCloudinary,\n            // Mantieni altri dati allegati (dati_verifica_completamento, etc.)\n            // Rimuovi le foto Base64 originali\n            _base64Foto: undefined // Rimuove le foto Base64\n        };\n        // Update database\n        const { error: updateError } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"lavorazioni\").update({\n            allegati: nuoviAllegati\n        }).eq(\"id\", lavorazione.id);\n        if (updateError) {\n            throw new Error(`Errore update database: ${updateError.message}`);\n        }\n        // Log di backup per sicurezza (opzionale - salva su file)\n        console.log(`💾 Backup creato per lavorazione ${lavorazione.id}`);\n        return {\n            success: true,\n            fotoMigrate: fotoCloudinary.length,\n            erroriUpload: erroriUpload.length > 0 ? erroriUpload : undefined\n        };\n    } catch (error) {\n        return {\n            success: false,\n            error: error instanceof Error ? error.message : \"Errore migrazione lavorazione\"\n        };\n    }\n}\n/**\n * Trova foto Base64 negli allegati\n */ function troveFotoBase64(allegati) {\n    if (!allegati) return [];\n    const foto = [];\n    // Cerca in vari campi dove potrebbero essere le foto Base64\n    const campiPossibili = [\n        \"foto\",\n        \"immagini\",\n        \"allegati\",\n        \"dati_verifica_completamento\"\n    ];\n    for (const campo of campiPossibili){\n        if (allegati[campo]) {\n            const valore = allegati[campo];\n            // Se è un array\n            if (Array.isArray(valore)) {\n                for (const item of valore){\n                    if (typeof item === \"string\" && item.startsWith(\"data:image\")) {\n                        foto.push(item);\n                    }\n                }\n            }\n            // Se è un oggetto, cerca ricorsivamente\n            if (typeof valore === \"object\" && valore !== null) {\n                const fotoRicorsive = troveFotoBase64Ricorsivo(valore);\n                foto.push(...fotoRicorsive);\n            }\n            // Se è una stringa Base64\n            if (typeof valore === \"string\" && valore.startsWith(\"data:image\")) {\n                foto.push(valore);\n            }\n        }\n    }\n    // Rimuovi duplicati\n    const fotoUniche = [];\n    for (const f of foto){\n        if (!fotoUniche.includes(f)) {\n            fotoUniche.push(f);\n        }\n    }\n    return fotoUniche;\n}\n/**\n * Cerca foto Base64 ricorsivamente in oggetti nested\n */ function troveFotoBase64Ricorsivo(obj) {\n    const foto = [];\n    for(const chiave in obj){\n        const valore = obj[chiave];\n        if (Array.isArray(valore)) {\n            for (const item of valore){\n                if (typeof item === \"string\" && item.startsWith(\"data:image\")) {\n                    foto.push(item);\n                }\n            }\n        } else if (typeof valore === \"object\" && valore !== null) {\n            foto.push(...troveFotoBase64Ricorsivo(valore));\n        } else if (typeof valore === \"string\" && valore.startsWith(\"data:image\")) {\n            foto.push(valore);\n        }\n    }\n    return foto;\n}\n/**\n * Migrazione di test per una singola lavorazione\n */ async function testMigrazioneLavorazione(lavorazioneId) {\n    console.log(`🧪 Test migrazione per lavorazione ${lavorazioneId}`);\n    const { data: lavorazione, error } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"lavorazioni\").select(\"id, allegati\").eq(\"id\", lavorazioneId).single();\n    if (error || !lavorazione) {\n        console.error(\"❌ Lavorazione non trovata:\", error);\n        return {\n            success: false,\n            error: \"Lavorazione non trovata\"\n        };\n    }\n    return await migrateLavorazioneFoto(lavorazione);\n}\n// Export per uso in script CLI\nif (true) {\n    // Solo su server/CLI\n    console.log(\"\\uD83D\\uDCCB Script migrazione foto disponibile\");\n    console.log(\"Usa: migrateFotoToCloudinary() per migrazione completa\");\n    console.log(\"Usa: testMigrazioneLavorazione(id) per test singola lavorazione\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/scripts/migrate-foto-cloudinary.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/@supabase","vendor-chunks/lodash","vendor-chunks/cloudinary","vendor-chunks/q"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fmigrate-foto%2Froute&page=%2Fapi%2Fmigrate-foto%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fmigrate-foto%2Froute.ts&appDir=%2FUsers%2Fakirayouky%2FDesktop%2FSiti%2FCondomini%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fakirayouky%2FDesktop%2FSiti%2FCondomini&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();