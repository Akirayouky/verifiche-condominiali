"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/lavorazioni/[id]/route";
exports.ids = ["app/api/lavorazioni/[id]/route"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("http");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

module.exports = require("https");

/***/ }),

/***/ "punycode":
/*!***************************!*\
  !*** external "punycode" ***!
  \***************************/
/***/ ((module) => {

module.exports = require("punycode");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("stream");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("url");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("zlib");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Flavorazioni%2F%5Bid%5D%2Froute&page=%2Fapi%2Flavorazioni%2F%5Bid%5D%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Flavorazioni%2F%5Bid%5D%2Froute.ts&appDir=%2FUsers%2Fakirayouky%2FDesktop%2FSiti%2FCondomini%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fakirayouky%2FDesktop%2FSiti%2FCondomini&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Flavorazioni%2F%5Bid%5D%2Froute&page=%2Fapi%2Flavorazioni%2F%5Bid%5D%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Flavorazioni%2F%5Bid%5D%2Froute.ts&appDir=%2FUsers%2Fakirayouky%2FDesktop%2FSiti%2FCondomini%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fakirayouky%2FDesktop%2FSiti%2FCondomini&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _Users_akirayouky_Desktop_Siti_Condomini_src_app_api_lavorazioni_id_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/app/api/lavorazioni/[id]/route.ts */ \"(rsc)/./src/app/api/lavorazioni/[id]/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/lavorazioni/[id]/route\",\n        pathname: \"/api/lavorazioni/[id]\",\n        filename: \"route\",\n        bundlePath: \"app/api/lavorazioni/[id]/route\"\n    },\n    resolvedPagePath: \"/Users/akirayouky/Desktop/Siti/Condomini/src/app/api/lavorazioni/[id]/route.ts\",\n    nextConfigOutput,\n    userland: _Users_akirayouky_Desktop_Siti_Condomini_src_app_api_lavorazioni_id_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/lavorazioni/[id]/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZsYXZvcmF6aW9uaSUyRiU1QmlkJTVEJTJGcm91dGUmcGFnZT0lMkZhcGklMkZsYXZvcmF6aW9uaSUyRiU1QmlkJTVEJTJGcm91dGUmYXBwUGF0aHM9JnBhZ2VQYXRoPXByaXZhdGUtbmV4dC1hcHAtZGlyJTJGYXBpJTJGbGF2b3JhemlvbmklMkYlNUJpZCU1RCUyRnJvdXRlLnRzJmFwcERpcj0lMkZVc2VycyUyRmFraXJheW91a3klMkZEZXNrdG9wJTJGU2l0aSUyRkNvbmRvbWluaSUyRnNyYyUyRmFwcCZwYWdlRXh0ZW5zaW9ucz10c3gmcGFnZUV4dGVuc2lvbnM9dHMmcGFnZUV4dGVuc2lvbnM9anN4JnBhZ2VFeHRlbnNpb25zPWpzJnJvb3REaXI9JTJGVXNlcnMlMkZha2lyYXlvdWt5JTJGRGVza3RvcCUyRlNpdGklMkZDb25kb21pbmkmaXNEZXY9dHJ1ZSZ0c2NvbmZpZ1BhdGg9dHNjb25maWcuanNvbiZiYXNlUGF0aD0mYXNzZXRQcmVmaXg9Jm5leHRDb25maWdPdXRwdXQ9JnByZWZlcnJlZFJlZ2lvbj0mbWlkZGxld2FyZUNvbmZpZz1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUFzRztBQUN2QztBQUNjO0FBQzhCO0FBQzNHO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixnSEFBbUI7QUFDM0M7QUFDQSxjQUFjLHlFQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxZQUFZO0FBQ1osQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLFFBQVEsaUVBQWlFO0FBQ3pFO0FBQ0E7QUFDQSxXQUFXLDRFQUFXO0FBQ3RCO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDdUg7O0FBRXZIIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY29uZG9taW5pLXB3YS8/MDM4NyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBcHBSb3V0ZVJvdXRlTW9kdWxlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLW1vZHVsZXMvYXBwLXJvdXRlL21vZHVsZS5jb21waWxlZFwiO1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLWtpbmRcIjtcbmltcG9ydCB7IHBhdGNoRmV0Y2ggYXMgX3BhdGNoRmV0Y2ggfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9saWIvcGF0Y2gtZmV0Y2hcIjtcbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCIvVXNlcnMvYWtpcmF5b3VreS9EZXNrdG9wL1NpdGkvQ29uZG9taW5pL3NyYy9hcHAvYXBpL2xhdm9yYXppb25pL1tpZF0vcm91dGUudHNcIjtcbi8vIFdlIGluamVjdCB0aGUgbmV4dENvbmZpZ091dHB1dCBoZXJlIHNvIHRoYXQgd2UgY2FuIHVzZSB0aGVtIGluIHRoZSByb3V0ZVxuLy8gbW9kdWxlLlxuY29uc3QgbmV4dENvbmZpZ091dHB1dCA9IFwiXCJcbmNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IEFwcFJvdXRlUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLkFQUF9ST1VURSxcbiAgICAgICAgcGFnZTogXCIvYXBpL2xhdm9yYXppb25pL1tpZF0vcm91dGVcIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL2FwaS9sYXZvcmF6aW9uaS9baWRdXCIsXG4gICAgICAgIGZpbGVuYW1lOiBcInJvdXRlXCIsXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiYXBwL2FwaS9sYXZvcmF6aW9uaS9baWRdL3JvdXRlXCJcbiAgICB9LFxuICAgIHJlc29sdmVkUGFnZVBhdGg6IFwiL1VzZXJzL2FraXJheW91a3kvRGVza3RvcC9TaXRpL0NvbmRvbWluaS9zcmMvYXBwL2FwaS9sYXZvcmF6aW9uaS9baWRdL3JvdXRlLnRzXCIsXG4gICAgbmV4dENvbmZpZ091dHB1dCxcbiAgICB1c2VybGFuZFxufSk7XG4vLyBQdWxsIG91dCB0aGUgZXhwb3J0cyB0aGF0IHdlIG5lZWQgdG8gZXhwb3NlIGZyb20gdGhlIG1vZHVsZS4gVGhpcyBzaG91bGRcbi8vIGJlIGVsaW1pbmF0ZWQgd2hlbiB3ZSd2ZSBtb3ZlZCB0aGUgb3RoZXIgcm91dGVzIHRvIHRoZSBuZXcgZm9ybWF0LiBUaGVzZVxuLy8gYXJlIHVzZWQgdG8gaG9vayBpbnRvIHRoZSByb3V0ZS5cbmNvbnN0IHsgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MgfSA9IHJvdXRlTW9kdWxlO1xuY29uc3Qgb3JpZ2luYWxQYXRobmFtZSA9IFwiL2FwaS9sYXZvcmF6aW9uaS9baWRdL3JvdXRlXCI7XG5mdW5jdGlvbiBwYXRjaEZldGNoKCkge1xuICAgIHJldHVybiBfcGF0Y2hGZXRjaCh7XG4gICAgICAgIHNlcnZlckhvb2tzLFxuICAgICAgICBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlXG4gICAgfSk7XG59XG5leHBvcnQgeyByb3V0ZU1vZHVsZSwgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MsIG9yaWdpbmFsUGF0aG5hbWUsIHBhdGNoRmV0Y2gsICB9O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1hcHAtcm91dGUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Flavorazioni%2F%5Bid%5D%2Froute&page=%2Fapi%2Flavorazioni%2F%5Bid%5D%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Flavorazioni%2F%5Bid%5D%2Froute.ts&appDir=%2FUsers%2Fakirayouky%2FDesktop%2FSiti%2FCondomini%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fakirayouky%2FDesktop%2FSiti%2FCondomini&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./src/app/api/lavorazioni/[id]/route.ts":
/*!***********************************************!*\
  !*** ./src/app/api/lavorazioni/[id]/route.ts ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DELETE: () => (/* binding */ DELETE),\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   PUT: () => (/* binding */ PUT)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _lib_supabase__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/supabase */ \"(rsc)/./src/lib/supabase.ts\");\n/* harmony import */ var _lib_notifications__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/notifications */ \"(rsc)/./src/lib/notifications.ts\");\n\n\n\n// GET - Ottieni lavorazione per ID\nasync function GET(request, { params }) {\n    try {\n        const { id } = params;\n        const { data, error } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_1__.dbQuery.lavorazioni.getById(id);\n        if (error) {\n            console.error(\"Errore Supabase GET lavorazione:\", error);\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: \"Errore nel recupero della lavorazione\"\n            }, {\n                status: 500\n            });\n        }\n        if (!data) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: \"Lavorazione non trovata\"\n            }, {\n                status: 404\n            });\n        }\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true,\n            data: data\n        });\n    } catch (error) {\n        console.error(\"Errore GET lavorazione:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: false,\n            error: \"Errore nel recupero della lavorazione\"\n        }, {\n            status: 500\n        });\n    }\n}\n// PUT - Aggiorna lavorazione\nasync function PUT(request, { params }) {\n    try {\n        const { id } = params;\n        const body = await request.json();\n        const { azione, dati } = body;\n        // Ottieni la lavorazione esistente\n        const { data: lavorazioneEsistente, error: getError } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_1__.dbQuery.lavorazioni.getById(id);\n        if (getError) {\n            console.error(\"Errore Supabase GET lavorazione esistente:\", getError);\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: \"Errore nel recupero della lavorazione\"\n            }, {\n                status: 500\n            });\n        }\n        if (!lavorazioneEsistente) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: \"Lavorazione non trovata\"\n            }, {\n                status: 404\n            });\n        }\n        const now = new Date().toISOString();\n        let updateData = {};\n        switch(azione){\n            case \"completa\":\n                if (lavorazioneEsistente.stato === \"completata\") {\n                    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                        success: false,\n                        error: \"La lavorazione \\xe8 gi\\xe0 completata\"\n                    }, {\n                        status: 400\n                    });\n                }\n                updateData = {\n                    stato: \"completata\"\n                };\n                // Aggiungi note se presenti\n                if (dati && dati.note && dati.note.trim()) {\n                    const noteEsistenti = lavorazioneEsistente.note || \"\";\n                    const nuovaNota = dati.note.trim();\n                    // Evita duplicati: aggiungi solo se la nota non è già presente\n                    if (!noteEsistenti.includes(nuovaNota)) {\n                        updateData.note = noteEsistenti ? `${noteEsistenti}\\n${nuovaNota}` : nuovaNota;\n                    } else {\n                        // Se la nota è già presente, mantieni quelle esistenti\n                        updateData.note = noteEsistenti;\n                    }\n                }\n                // Salva dati verifica nei metadati se presenti\n                if (dati && (dati.dati_verifica || dati.foto)) {\n                    try {\n                        const metadataEsistenti = lavorazioneEsistente.allegati ? JSON.parse(lavorazioneEsistente.allegati) : {};\n                        const nuoviMetadata = {\n                            ...metadataEsistenti,\n                            data_completamento: now\n                        };\n                        // Aggiungi dati verifica se presenti\n                        if (dati.dati_verifica) {\n                            nuoviMetadata.dati_verifica_completamento = dati.dati_verifica;\n                        }\n                        // Aggiungi foto se presenti (supporta sia oggetto per sezione che array legacy)\n                        if (dati.foto) {\n                            if (typeof dati.foto === \"object\" && !Array.isArray(dati.foto)) {\n                                // Nuovo formato: oggetto con foto per sezione\n                                nuoviMetadata.foto = dati.foto;\n                                const totaleFoto = Object.values(dati.foto).reduce((sum, arr)=>sum + (Array.isArray(arr) ? arr.length : 0), 0);\n                                console.log(\"\\uD83D\\uDCF8 Salvando foto per sezione:\", Object.keys(dati.foto).join(\", \"));\n                                console.log(\"\\uD83D\\uDCF8 Totale foto:\", totaleFoto);\n                            } else if (Array.isArray(dati.foto) && dati.foto.length > 0) {\n                                // Formato legacy: array di stringhe\n                                nuoviMetadata.foto = dati.foto;\n                                console.log(\"\\uD83D\\uDCF8 Salvando\", dati.foto.length, \"foto (formato legacy)\");\n                            }\n                        }\n                        // Aggiungi firma digitale se presente\n                        if (dati.firma) {\n                            nuoviMetadata.firma = dati.firma;\n                            console.log(\"✍️ Salvando firma digitale:\", dati.firma);\n                        }\n                        // Aggiungi GPS metadata se presente\n                        if (dati.foto_geo && Array.isArray(dati.foto_geo) && dati.foto_geo.length > 0) {\n                            nuoviMetadata.foto_geo = dati.foto_geo;\n                            console.log(\"\\uD83D\\uDCCD Salvando GPS metadata:\", dati.foto_geo.length, \"posizioni\");\n                        }\n                        updateData.allegati = JSON.stringify(nuoviMetadata);\n                    } catch (e) {\n                        // Se i metadati esistenti non sono JSON valido, crea nuovi\n                        const nuoviMetadata = {\n                            data_completamento: now\n                        };\n                        if (dati.dati_verifica) {\n                            nuoviMetadata.dati_verifica_completamento = dati.dati_verifica;\n                        }\n                        if (dati.foto) {\n                            if (typeof dati.foto === \"object\" && !Array.isArray(dati.foto)) {\n                                // Nuovo formato: oggetto con foto per sezione\n                                nuoviMetadata.foto = dati.foto;\n                                const totaleFoto = Object.values(dati.foto).reduce((sum, arr)=>sum + (Array.isArray(arr) ? arr.length : 0), 0);\n                                console.log(\"\\uD83D\\uDCF8 Salvando foto per sezione (nuovo):\", Object.keys(dati.foto).join(\", \"));\n                                console.log(\"\\uD83D\\uDCF8 Totale foto:\", totaleFoto);\n                            } else if (Array.isArray(dati.foto) && dati.foto.length > 0) {\n                                // Formato legacy: array di stringhe\n                                nuoviMetadata.foto = dati.foto;\n                                console.log(\"\\uD83D\\uDCF8 Salvando\", dati.foto.length, \"foto (formato legacy - nuovo)\");\n                            }\n                        }\n                        // Aggiungi firma digitale se presente (catch block)\n                        if (dati.firma) {\n                            nuoviMetadata.firma = dati.firma;\n                            console.log(\"✍️ Salvando firma digitale (catch):\", dati.firma);\n                        }\n                        // Aggiungi GPS metadata se presente (catch block)\n                        if (dati.foto_geo && Array.isArray(dati.foto_geo) && dati.foto_geo.length > 0) {\n                            nuoviMetadata.foto_geo = dati.foto_geo;\n                            console.log(\"\\uD83D\\uDCCD Salvando GPS metadata (catch):\", dati.foto_geo.length, \"posizioni\");\n                        }\n                        updateData.allegati = JSON.stringify(nuoviMetadata);\n                    }\n                }\n                // Crea notifica per completamento lavorazione (per tutti gli admin)\n                try {\n                    const { data: condominio } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_1__.dbQuery.condomini.getById(lavorazioneEsistente.condominio_id);\n                    const notificationManager = new _lib_notifications__WEBPACK_IMPORTED_MODULE_2__.NotificationManager();\n                    // Ottieni lista admin\n                    const adminUsers = await (0,_lib_notifications__WEBPACK_IMPORTED_MODULE_2__.getAdminUsers)();\n                    console.log(\"\\uD83D\\uDCE7 Inviando notifica di completamento a\", adminUsers.length, \"admin\");\n                    // Crea notifiche per tutti gli admin\n                    if (adminUsers.length > 0) {\n                        const notifiche = await notificationManager.notificaLavorazioneCompletata({\n                            id: lavorazioneEsistente.id,\n                            titolo: lavorazioneEsistente.titolo || lavorazioneEsistente.descrizione,\n                            condominio_id: lavorazioneEsistente.condominio_id\n                        }, adminUsers);\n                        console.log(\"✅ Notifiche completamento create:\", notifiche.length);\n                    } else {\n                        console.warn(\"⚠️ Nessun admin trovato per notifica completamento\");\n                    }\n                } catch (notifError) {\n                    console.error(\"⚠️ Errore nella creazione della notifica di completamento:\", notifError);\n                }\n                break;\n            case \"inizia\":\n                if (lavorazioneEsistente.stato !== \"aperta\") {\n                    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                        success: false,\n                        error: \"Solo le lavorazioni aperte possono essere iniziate\"\n                    }, {\n                        status: 400\n                    });\n                }\n                updateData = {\n                    stato: \"in_corso\"\n                };\n                if (dati && dati.nota) {\n                    const noteEsistenti = lavorazioneEsistente.note || \"\";\n                    updateData.note = noteEsistenti ? `${noteEsistenti}\\n${dati.nota}` : dati.nota;\n                }\n                break;\n            case \"riapri\":\n                console.log(\"\\uD83D\\uDD04 API Riapertura - Stato attuale:\", lavorazioneEsistente.stato);\n                if (lavorazioneEsistente.stato !== \"completata\") {\n                    console.log(\"❌ Errore riapertura: stato non \\xe8 completata\");\n                    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                        success: false,\n                        error: \"Solo le lavorazioni completate possono essere riaperte\"\n                    }, {\n                        status: 400\n                    });\n                }\n                updateData = {\n                    stato: \"riaperta\"\n                };\n                console.log(\"\\uD83D\\uDCDD Motivo riapertura:\", dati?.motivo);\n                // Aggiungi nota di riapertura se presente motivo\n                if (dati && dati.motivo) {\n                    const noteEsistenti = lavorazioneEsistente.note || \"\";\n                    updateData.note = noteEsistenti ? `${noteEsistenti}\\nRiapertura: ${dati.motivo}` : `Riapertura: ${dati.motivo}`;\n                    console.log(\"✅ Note aggiornate:\", updateData.note);\n                }\n                console.log(\"\\uD83D\\uDD04 UpdateData riapertura:\", updateData);\n                break;\n            case \"assegna\":\n                if (!dati || !dati.utenteAssegnato) {\n                    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                        success: false,\n                        error: \"Utente assegnato obbligatorio per questa azione\"\n                    }, {\n                        status: 400\n                    });\n                }\n                updateData = {\n                    // Compatibilità con nuovo schema (user_id) e vecchio (utente_assegnato)\n                    user_id: dati.utenteAssegnato,\n                    utente_assegnato: dati.utenteAssegnato // Retrocompatibilità\n                };\n                break;\n            case \"aggiungi_nota\":\n                if (!dati || !dati.nota) {\n                    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                        success: false,\n                        error: \"Nota obbligatoria per questa azione\"\n                    }, {\n                        status: 400\n                    });\n                }\n                updateData = {\n                    note: typeof lavorazioneEsistente.note === \"string\" ? lavorazioneEsistente.note + \"\\n\" + dati.nota : [\n                        ...lavorazioneEsistente.note || [],\n                        dati.nota\n                    ].join(\"\\n\")\n                };\n                break;\n            case \"aggiorna\":\n                updateData = {\n                    ...dati\n                };\n                break;\n            default:\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    success: false,\n                    error: \"Azione non valida\"\n                }, {\n                    status: 400\n                });\n        }\n        console.log(\"Tentativo di aggiornamento lavorazione ID:\", id);\n        console.log(\"Dati di aggiornamento:\", JSON.stringify(updateData, null, 2));\n        const { data: updatedData, error: updateError } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_1__.dbQuery.lavorazioni.update(id, updateData);\n        if (updateError) {\n            console.error(\"Errore Supabase UPDATE lavorazione:\", updateError);\n            console.error(\"Dettagli errore:\", JSON.stringify(updateError, null, 2));\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: `Errore nell'aggiornamento della lavorazione: ${updateError.message}`\n            }, {\n                status: 500\n            });\n        }\n        console.log(\"Aggiornamento completato con successo:\", updatedData);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true,\n            data: updatedData,\n            message: \"Lavorazione aggiornata con successo\"\n        });\n    } catch (error) {\n        console.error(\"Errore PUT lavorazione:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: false,\n            error: \"Errore nell'aggiornamento della lavorazione\"\n        }, {\n            status: 500\n        });\n    }\n}\n// DELETE - Elimina lavorazione\nasync function DELETE(request, { params }) {\n    try {\n        const { id } = params;\n        const { error } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_1__.dbQuery.lavorazioni.delete(id);\n        if (error) {\n            console.error(\"Errore Supabase DELETE lavorazione:\", error);\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: \"Errore nell'eliminazione della lavorazione\"\n            }, {\n                status: 500\n            });\n        }\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true,\n            message: \"Lavorazione eliminata con successo\"\n        });\n    } catch (error) {\n        console.error(\"Errore DELETE lavorazione:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: false,\n            error: \"Errore nell'eliminazione della lavorazione\"\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/app/api/lavorazioni/[id]/route.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/notifications.ts":
/*!**********************************!*\
  !*** ./src/lib/notifications.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NotificationManager: () => (/* binding */ NotificationManager),\n/* harmony export */   controllaScadenzeLavorazioni: () => (/* binding */ controllaScadenzeLavorazioni),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   getAdminUsers: () => (/* binding */ getAdminUsers)\n/* harmony export */ });\n/* harmony import */ var _lib_supabase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/lib/supabase */ \"(rsc)/./src/lib/supabase.ts\");\n/**\n * Sistema di gestione notifiche real-time\n * Gestisce creazione, invio e persistenza delle notifiche\n */ \n/**\n * Classe per gestione notifiche centralizzata\n */ class NotificationManager {\n    static getInstance() {\n        if (!NotificationManager.instance) {\n            NotificationManager.instance = new NotificationManager();\n        }\n        return NotificationManager.instance;\n    }\n    /**\n   * Crea una nuova notifica nel database\n   */ async creaNotifica(datiNotifica) {\n        try {\n            const nuovaNotifica = {\n                ...datiNotifica,\n                letta: false,\n                data_creazione: new Date().toISOString()\n            };\n            console.log(\"\\uD83D\\uDCE2 Creando notifica:\", nuovaNotifica);\n            const { data, error } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"notifiche\").insert([\n                nuovaNotifica\n            ]).select().single();\n            if (error) {\n                console.error(\"❌ Errore creazione notifica:\", error);\n                return null;\n            }\n            const notifica = data;\n            console.log(\"✅ Notifica creata:\", notifica.id);\n            // Invia notifica real-time ai subscriber\n            this.inviaNotificaRealTime(notifica);\n            // Invia push notification (non blocca se fallisce)\n            this.inviaPushNotification(notifica).catch((error)=>{\n                console.warn(\"⚠️ Errore invio push notification:\", error);\n            });\n            return notifica;\n        } catch (error) {\n            console.error(\"❌ Errore critico creazione notifica:\", error);\n            return null;\n        }\n    }\n    /**\n   * Notifica per scadenza lavorazione imminente\n   */ async notificaScadenzaImminente(lavorazione, giorniAnticipo) {\n        const dataScadenza = new Date(lavorazione.data_scadenza);\n        const dataNotifica = new Date();\n        dataNotifica.setDate(dataNotifica.getDate() + giorniAnticipo);\n        return await this.creaNotifica({\n            tipo: \"scadenza_imminente\",\n            titolo: `⏰ Scadenza lavorazione tra ${giorniAnticipo} giorni`,\n            messaggio: `La lavorazione \"${lavorazione.titolo}\" nel condominio scade il ${dataScadenza.toLocaleDateString(\"it-IT\")}`,\n            utente_id: lavorazione.user_id,\n            lavorazione_id: lavorazione.id,\n            condominio_id: lavorazione.condominio_id,\n            priorita: giorniAnticipo <= 1 ? \"urgente\" : giorniAnticipo <= 3 ? \"alta\" : \"media\",\n            data_scadenza: lavorazione.data_scadenza\n        });\n    }\n    /**\n   * Notifica per nuova assegnazione sopralluoghista\n   */ async notificaNuovaAssegnazione(lavorazione, utenteAssegnato) {\n        return await this.creaNotifica({\n            tipo: \"nuova_assegnazione\",\n            titolo: \"\\uD83D\\uDCCB Nuova lavorazione assegnata\",\n            messaggio: `Ti è stata assegnata la lavorazione \"${lavorazione.titolo}\" con priorità ${lavorazione.priorita}`,\n            utente_id: utenteAssegnato,\n            lavorazione_id: lavorazione.id,\n            condominio_id: lavorazione.condominio_id,\n            priorita: lavorazione.priorita === \"urgente\" ? \"urgente\" : \"alta\"\n        });\n    }\n    /**\n   * Notifica per lavorazione completata (per admin)\n   */ async notificaLavorazioneCompletata(lavorazione, adminUsers) {\n        const notifiche = [];\n        for (const adminId of adminUsers){\n            const notifica = await this.creaNotifica({\n                tipo: \"lavorazione_completata\",\n                titolo: \"✅ Lavorazione completata\",\n                messaggio: `La lavorazione \"${lavorazione.titolo}\" è stata completata dal sopralluoghista`,\n                utente_id: adminId,\n                lavorazione_id: lavorazione.id,\n                condominio_id: lavorazione.condominio_id,\n                priorita: \"media\"\n            });\n            if (notifica) notifiche.push(notifica);\n        }\n        return notifiche;\n    }\n    /**\n   * Crea reminder personalizzato\n   */ async creaReminderPersonalizzato(config, messaggio) {\n        return await this.creaNotifica({\n            tipo: \"reminder_personalizzato\",\n            titolo: `🔔 ${config.nome}`,\n            messaggio,\n            utente_id: config.utente_id,\n            priorita: \"media\"\n        });\n    }\n    /**\n   * Recupera notifiche non lette per utente\n   */ async getNotificheNonLette(utenteId) {\n        try {\n            const { data, error } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"notifiche\").select(\"*\").eq(\"utente_id\", utenteId).eq(\"letta\", false).order(\"data_creazione\", {\n                ascending: false\n            }).limit(50);\n            if (error) {\n                console.error(\"❌ Errore recupero notifiche:\", error);\n                return [];\n            }\n            return data || [];\n        } catch (error) {\n            console.error(\"❌ Errore critico recupero notifiche:\", error);\n            return [];\n        }\n    }\n    /**\n   * Marca notifica come letta\n   */ async marcaComeLetta(notificaId) {\n        try {\n            console.log(`📝 Marcando notifica come letta: ${notificaId}`);\n            const { data, error } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"notifiche\").update({\n                letta: true,\n                data_aggiornamento: new Date().toISOString()\n            }).eq(\"id\", notificaId).select();\n            if (error) {\n                console.error(\"❌ Errore DB marca come letta:\", error);\n                return false;\n            }\n            console.log(`✅ Notifica ${notificaId} aggiornata:`, data);\n            return true;\n        } catch (error) {\n            console.error(\"❌ Errore critico marca come letta:\", error);\n            return false;\n        }\n    }\n    /**\n   * Marca tutte le notifiche come lette per un utente\n   */ async marcaTutteComeLette(utenteId) {\n        try {\n            console.log(`📝 Marcando tutte le notifiche come lette per utente: ${utenteId}`);\n            const { data, error } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"notifiche\").update({\n                letta: true,\n                data_aggiornamento: new Date().toISOString()\n            }).eq(\"utente_id\", utenteId).eq(\"letta\", false).select();\n            if (error) {\n                console.error(\"❌ Errore DB marca tutte come lette:\", error);\n                return false;\n            }\n            console.log(`✅ ${data?.length || 0} notifiche marcate come lette per utente ${utenteId}`);\n            return true;\n        } catch (error) {\n            console.error(\"❌ Errore critico marca tutte come lette:\", error);\n            return false;\n        }\n    }\n    /**\n   * Sottoscrivi a notifiche real-time per un utente\n   */ subscribe(utenteId, callback) {\n        this.subscribers.set(utenteId, callback);\n        // Ritorna funzione di unsubscribe\n        return ()=>{\n            this.subscribers.delete(utenteId);\n        };\n    }\n    /**\n   * Invia notifica real-time ai subscriber\n   */ inviaNotificaRealTime(notifica) {\n        const callback = this.subscribers.get(notifica.utente_id);\n        if (callback) {\n            callback(notifica);\n        }\n    }\n    /**\n   * Invia push notification al dispositivo (se subscription attiva)\n   */ async inviaPushNotification(notifica) {\n        try {\n            console.log(`📲 Tentativo invio push per notifica ${notifica.id} a utente ${notifica.utente_id}`);\n            const response = await fetch(\"/api/push/send\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    utenteIds: [\n                        notifica.utente_id\n                    ],\n                    title: notifica.titolo,\n                    message: notifica.messaggio,\n                    url: \"/\",\n                    priorita: notifica.priorita,\n                    notificaId: notifica.id,\n                    lavorazioneId: notifica.lavorazione_id,\n                    condominioId: notifica.condominio_id\n                })\n            });\n            if (!response.ok) {\n                throw new Error(`HTTP ${response.status}`);\n            }\n            const result = await response.json();\n            console.log(`✅ Push inviato: ${result.sent}/${result.total}`);\n        } catch (error) {\n            // Non blocca, solo log\n            console.warn(`⚠️ Push notification non inviato per ${notifica.id}:`, error);\n        }\n    }\n    constructor(){\n        this.subscribers = new Map();\n    }\n}\n/**\n * Utility per controllo scadenze lavorazioni\n */ async function controllaScadenzeLavorazioni() {\n    console.log(\"\\uD83D\\uDD0D Controllo scadenze lavorazioni...\");\n    try {\n        const notificationManager = NotificationManager.getInstance();\n        // Query lavorazioni attive con scadenza nei prossimi giorni\n        const dataOggi = new Date();\n        const tra7Giorni = new Date();\n        tra7Giorni.setDate(dataOggi.getDate() + 7);\n        const { data: lavorazioni, error } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"lavorazioni\").select(`\n        id, titolo, data_scadenza, user_id, condominio_id, priorita,\n        condomini!inner(nome)\n      `).in(\"stato\", [\n            \"da_eseguire\",\n            \"in_corso\",\n            \"riaperta\"\n        ]).gte(\"data_scadenza\", dataOggi.toISOString()).lte(\"data_scadenza\", tra7Giorni.toISOString());\n        if (error) {\n            console.error(\"❌ Errore query scadenze:\", error);\n            return;\n        }\n        if (!lavorazioni || lavorazioni.length === 0) {\n            console.log(\"✅ Nessuna scadenza imminente\");\n            return;\n        }\n        console.log(`⏰ Trovate ${lavorazioni.length} lavorazioni in scadenza`);\n        // Crea notifiche per ogni lavorazione\n        for (const lavorazione of lavorazioni){\n            const dataScadenza = new Date(lavorazione.data_scadenza);\n            const giorniRimanenti = Math.ceil((dataScadenza.getTime() - dataOggi.getTime()) / (1000 * 60 * 60 * 24));\n            // Notifica a 7, 3, 1 giorni e il giorno stesso\n            if ([\n                7,\n                3,\n                1,\n                0\n            ].includes(giorniRimanenti)) {\n                await notificationManager.notificaScadenzaImminente(lavorazione, giorniRimanenti);\n            }\n        }\n    } catch (error) {\n        console.error(\"❌ Errore critico controllo scadenze:\", error);\n    }\n}\n/**\n * Utility per ottenere admin users\n */ async function getAdminUsers() {\n    try {\n        const { data: admins, error } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"users\").select(\"id\").eq(\"role\", \"admin\").eq(\"attivo\", true);\n        if (error) {\n            console.error(\"❌ Errore recupero admin:\", error);\n            return [];\n        }\n        return admins?.map((admin)=>admin.id) || [];\n    } catch (error) {\n        console.error(\"❌ Errore critico recupero admin:\", error);\n        return [];\n    }\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (NotificationManager);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/notifications.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/supabase.ts":
/*!*****************************!*\
  !*** ./src/lib/supabase.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   dbQuery: () => (/* binding */ dbQuery),\n/* harmony export */   supabase: () => (/* binding */ supabase)\n/* harmony export */ });\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @supabase/supabase-js */ \"(rsc)/./node_modules/@supabase/supabase-js/dist/module/index.js\");\n\nconst supabaseUrl = \"https://ygvlcikgzkoaxlrmwsnv.supabase.co\" || 0;\nconst supabaseKey = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InlndmxjaWtnemtvYXhscm13c252Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTkzOTgzMzgsImV4cCI6MjA3NDk3NDMzOH0.Zc6eihyJiTZy6WicV6MyIgZ1Oq7GwzRYR01zovQHFPs\" || 0;\nconst supabase = (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__.createClient)(supabaseUrl, supabaseKey);\n// Funzioni helper per il database\nconst dbQuery = {\n    // Condomini\n    condomini: {\n        getAll: ()=>supabase.from(\"condomini\").select(\"*\").order(\"data_inserimento\", {\n                ascending: false\n            }),\n        create: (data)=>supabase.from(\"condomini\").insert([\n                data\n            ]).select().single(),\n        getById: (id)=>supabase.from(\"condomini\").select(\"*\").eq(\"id\", id).single(),\n        update: (id, data)=>supabase.from(\"condomini\").update(data).eq(\"id\", id).select().single(),\n        delete: (id)=>supabase.from(\"condomini\").delete().eq(\"id\", id)\n    },\n    // Tipologie\n    tipologie: {\n        getAll: ()=>supabase.from(\"tipologie_verifiche\").select(\"*\").order(\"data_creazione\", {\n                ascending: false\n            }),\n        create: (data)=>supabase.from(\"tipologie_verifiche\").insert([\n                data\n            ]).select().single(),\n        getById: (id)=>supabase.from(\"tipologie_verifiche\").select(\"*\").eq(\"id\", id).single(),\n        update: (id, data)=>supabase.from(\"tipologie_verifiche\").update(data).eq(\"id\", id).select().single(),\n        delete: (id)=>supabase.from(\"tipologie_verifiche\").delete().eq(\"id\", id)\n    },\n    // Verifiche\n    verifiche: {\n        getAll: ()=>supabase.from(\"verifiche\").select(\"*\").order(\"data_creazione\", {\n                ascending: false\n            }),\n        create: (data)=>supabase.from(\"verifiche\").insert([\n                data\n            ]).select().single(),\n        getById: (id)=>supabase.from(\"verifiche\").select(\"*\").eq(\"id\", id).single(),\n        update: (id, data)=>supabase.from(\"verifiche\").update(data).eq(\"id\", id).select().single(),\n        delete: (id)=>supabase.from(\"verifiche\").delete().eq(\"id\", id)\n    },\n    // Lavorazioni\n    lavorazioni: {\n        getAll: ()=>supabase.from(\"lavorazioni\").select(\"*\").order(\"data_apertura\", {\n                ascending: false\n            }),\n        create: (data)=>supabase.from(\"lavorazioni\").insert([\n                data\n            ]).select().single(),\n        getById: (id)=>supabase.from(\"lavorazioni\").select(\"*\").eq(\"id\", id).single(),\n        update: (id, data)=>supabase.from(\"lavorazioni\").update(data).eq(\"id\", id).select().single(),\n        delete: (id)=>supabase.from(\"lavorazioni\").delete().eq(\"id\", id)\n    },\n    // Users\n    users: {\n        getAll: ()=>supabase.from(\"users\").select(\"id, username, email, role, nome, cognome, telefono, attivo, created_at, last_login, approved_at\").order(\"created_at\", {\n                ascending: false\n            }),\n        create: (data)=>supabase.from(\"users\").insert([\n                data\n            ]).select(\"id, username, email, role, nome, cognome, telefono, attivo, created_at\").single(),\n        getById: (id)=>supabase.from(\"users\").select(\"id, username, email, role, nome, cognome, telefono, attivo, created_at, last_login, approved_at\").eq(\"id\", id).single(),\n        getByIdFull: (id)=>supabase.from(\"users\").select(\"*\").eq(\"id\", id).single(),\n        getByUsername: (username)=>supabase.from(\"users\").select(\"*\").eq(\"username\", username).single(),\n        getByEmail: (email)=>supabase.from(\"users\").select(\"*\").eq(\"email\", email).single(),\n        update: (id, data)=>supabase.from(\"users\").update(data).eq(\"id\", id).select(\"id, username, email, role, nome, cognome, telefono, attivo, created_at, last_login, approved_at\").single(),\n        updateLastLogin: (id)=>supabase.from(\"users\").update({\n                last_login: new Date().toISOString()\n            }).eq(\"id\", id),\n        delete: (id)=>supabase.from(\"users\").delete().eq(\"id\", id)\n    },\n    // Note Personali\n    note_personali: {\n        getAll: ()=>supabase.from(\"note_personali\").select(\"*\").order(\"data_creazione\", {\n                ascending: false\n            }),\n        getAllByUser: (utente_id)=>supabase.from(\"note_personali\").select(\"*\").eq(\"utente_id\", utente_id).order(\"data_creazione\", {\n                ascending: false\n            }),\n        create: (data)=>supabase.from(\"note_personali\").insert([\n                data\n            ]).select().single(),\n        getById: (id)=>supabase.from(\"note_personali\").select(\"*\").eq(\"id\", id).single(),\n        update: (id, data)=>supabase.from(\"note_personali\").update(data).eq(\"id\", id).select().single(),\n        delete: (id)=>supabase.from(\"note_personali\").delete().eq(\"id\", id)\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/supabase.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/@supabase"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Flavorazioni%2F%5Bid%5D%2Froute&page=%2Fapi%2Flavorazioni%2F%5Bid%5D%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Flavorazioni%2F%5Bid%5D%2Froute.ts&appDir=%2FUsers%2Fakirayouky%2FDesktop%2FSiti%2FCondomini%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fakirayouky%2FDesktop%2FSiti%2FCondomini&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();