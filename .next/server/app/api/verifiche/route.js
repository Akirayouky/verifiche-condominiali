"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/verifiche/route";
exports.ids = ["app/api/verifiche/route"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("http");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

module.exports = require("https");

/***/ }),

/***/ "punycode":
/*!***************************!*\
  !*** external "punycode" ***!
  \***************************/
/***/ ((module) => {

module.exports = require("punycode");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("stream");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("url");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("zlib");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fverifiche%2Froute&page=%2Fapi%2Fverifiche%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fverifiche%2Froute.ts&appDir=%2FUsers%2Fakirayouky%2FDesktop%2FSiti%2FCondomini%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fakirayouky%2FDesktop%2FSiti%2FCondomini&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fverifiche%2Froute&page=%2Fapi%2Fverifiche%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fverifiche%2Froute.ts&appDir=%2FUsers%2Fakirayouky%2FDesktop%2FSiti%2FCondomini%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fakirayouky%2FDesktop%2FSiti%2FCondomini&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _Users_akirayouky_Desktop_Siti_Condomini_src_app_api_verifiche_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/app/api/verifiche/route.ts */ \"(rsc)/./src/app/api/verifiche/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/verifiche/route\",\n        pathname: \"/api/verifiche\",\n        filename: \"route\",\n        bundlePath: \"app/api/verifiche/route\"\n    },\n    resolvedPagePath: \"/Users/akirayouky/Desktop/Siti/Condomini/src/app/api/verifiche/route.ts\",\n    nextConfigOutput,\n    userland: _Users_akirayouky_Desktop_Siti_Condomini_src_app_api_verifiche_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/verifiche/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZ2ZXJpZmljaGUlMkZyb3V0ZSZwYWdlPSUyRmFwaSUyRnZlcmlmaWNoZSUyRnJvdXRlJmFwcFBhdGhzPSZwYWdlUGF0aD1wcml2YXRlLW5leHQtYXBwLWRpciUyRmFwaSUyRnZlcmlmaWNoZSUyRnJvdXRlLnRzJmFwcERpcj0lMkZVc2VycyUyRmFraXJheW91a3klMkZEZXNrdG9wJTJGU2l0aSUyRkNvbmRvbWluaSUyRnNyYyUyRmFwcCZwYWdlRXh0ZW5zaW9ucz10c3gmcGFnZUV4dGVuc2lvbnM9dHMmcGFnZUV4dGVuc2lvbnM9anN4JnBhZ2VFeHRlbnNpb25zPWpzJnJvb3REaXI9JTJGVXNlcnMlMkZha2lyYXlvdWt5JTJGRGVza3RvcCUyRlNpdGklMkZDb25kb21pbmkmaXNEZXY9dHJ1ZSZ0c2NvbmZpZ1BhdGg9dHNjb25maWcuanNvbiZiYXNlUGF0aD0mYXNzZXRQcmVmaXg9Jm5leHRDb25maWdPdXRwdXQ9JnByZWZlcnJlZFJlZ2lvbj0mbWlkZGxld2FyZUNvbmZpZz1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUFzRztBQUN2QztBQUNjO0FBQ3VCO0FBQ3BHO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixnSEFBbUI7QUFDM0M7QUFDQSxjQUFjLHlFQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxZQUFZO0FBQ1osQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLFFBQVEsaUVBQWlFO0FBQ3pFO0FBQ0E7QUFDQSxXQUFXLDRFQUFXO0FBQ3RCO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDdUg7O0FBRXZIIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY29uZG9taW5pLXB3YS8/ODliNiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBcHBSb3V0ZVJvdXRlTW9kdWxlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLW1vZHVsZXMvYXBwLXJvdXRlL21vZHVsZS5jb21waWxlZFwiO1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLWtpbmRcIjtcbmltcG9ydCB7IHBhdGNoRmV0Y2ggYXMgX3BhdGNoRmV0Y2ggfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9saWIvcGF0Y2gtZmV0Y2hcIjtcbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCIvVXNlcnMvYWtpcmF5b3VreS9EZXNrdG9wL1NpdGkvQ29uZG9taW5pL3NyYy9hcHAvYXBpL3ZlcmlmaWNoZS9yb3V0ZS50c1wiO1xuLy8gV2UgaW5qZWN0IHRoZSBuZXh0Q29uZmlnT3V0cHV0IGhlcmUgc28gdGhhdCB3ZSBjYW4gdXNlIHRoZW0gaW4gdGhlIHJvdXRlXG4vLyBtb2R1bGUuXG5jb25zdCBuZXh0Q29uZmlnT3V0cHV0ID0gXCJcIlxuY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgQXBwUm91dGVSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuQVBQX1JPVVRFLFxuICAgICAgICBwYWdlOiBcIi9hcGkvdmVyaWZpY2hlL3JvdXRlXCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9hcGkvdmVyaWZpY2hlXCIsXG4gICAgICAgIGZpbGVuYW1lOiBcInJvdXRlXCIsXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiYXBwL2FwaS92ZXJpZmljaGUvcm91dGVcIlxuICAgIH0sXG4gICAgcmVzb2x2ZWRQYWdlUGF0aDogXCIvVXNlcnMvYWtpcmF5b3VreS9EZXNrdG9wL1NpdGkvQ29uZG9taW5pL3NyYy9hcHAvYXBpL3ZlcmlmaWNoZS9yb3V0ZS50c1wiLFxuICAgIG5leHRDb25maWdPdXRwdXQsXG4gICAgdXNlcmxhbmRcbn0pO1xuLy8gUHVsbCBvdXQgdGhlIGV4cG9ydHMgdGhhdCB3ZSBuZWVkIHRvIGV4cG9zZSBmcm9tIHRoZSBtb2R1bGUuIFRoaXMgc2hvdWxkXG4vLyBiZSBlbGltaW5hdGVkIHdoZW4gd2UndmUgbW92ZWQgdGhlIG90aGVyIHJvdXRlcyB0byB0aGUgbmV3IGZvcm1hdC4gVGhlc2Vcbi8vIGFyZSB1c2VkIHRvIGhvb2sgaW50byB0aGUgcm91dGUuXG5jb25zdCB7IHJlcXVlc3RBc3luY1N0b3JhZ2UsIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzIH0gPSByb3V0ZU1vZHVsZTtcbmNvbnN0IG9yaWdpbmFsUGF0aG5hbWUgPSBcIi9hcGkvdmVyaWZpY2hlL3JvdXRlXCI7XG5mdW5jdGlvbiBwYXRjaEZldGNoKCkge1xuICAgIHJldHVybiBfcGF0Y2hGZXRjaCh7XG4gICAgICAgIHNlcnZlckhvb2tzLFxuICAgICAgICBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlXG4gICAgfSk7XG59XG5leHBvcnQgeyByb3V0ZU1vZHVsZSwgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MsIG9yaWdpbmFsUGF0aG5hbWUsIHBhdGNoRmV0Y2gsICB9O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1hcHAtcm91dGUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fverifiche%2Froute&page=%2Fapi%2Fverifiche%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fverifiche%2Froute.ts&appDir=%2FUsers%2Fakirayouky%2FDesktop%2FSiti%2FCondomini%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fakirayouky%2FDesktop%2FSiti%2FCondomini&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./src/app/api/verifiche/route.ts":
/*!****************************************!*\
  !*** ./src/app/api/verifiche/route.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _lib_supabase__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/supabase */ \"(rsc)/./src/lib/supabase.ts\");\n/* harmony import */ var _lib_notifications__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/notifications */ \"(rsc)/./src/lib/notifications.ts\");\n\n\n\n// GET - Ottieni tutte le verifiche\nasync function GET(request) {\n    try {\n        const { searchParams } = new URL(request.url);\n        const condominioId = searchParams.get(\"condominioId\");\n        const tipologiaId = searchParams.get(\"tipologiaId\");\n        const stato = searchParams.get(\"stato\");\n        // Per ora prendiamo tutte le verifiche, poi filtriamo lato client se necessario\n        const { data, error } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_1__.dbQuery.verifiche.getAll();\n        if (error) {\n            console.error(\"Errore Supabase GET verifiche:\", error);\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: \"Errore nel recupero delle verifiche\"\n            }, {\n                status: 500\n            });\n        }\n        // Filtri opzionali (da implementare lato database se necessario)\n        let filteredVerifiche = data || [];\n        if (condominioId) {\n            filteredVerifiche = filteredVerifiche.filter((v)=>v.condominio_id === condominioId);\n        }\n        if (tipologiaId) {\n            filteredVerifiche = filteredVerifiche.filter((v)=>v.tipologia_id === tipologiaId);\n        }\n        if (stato) {\n            filteredVerifiche = filteredVerifiche.filter((v)=>v.stato === stato);\n        }\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true,\n            data: filteredVerifiche,\n            total: filteredVerifiche.length\n        });\n    } catch (error) {\n        console.error(\"Errore GET verifiche:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: false,\n            error: \"Errore nel recupero delle verifiche\"\n        }, {\n            status: 500\n        });\n    }\n}\n// POST - Crea nuova verifica\nasync function POST(request) {\n    try {\n        const body = await request.json();\n        const { condominio_id, tipologia_id, dati_verifica, note } = body;\n        if (!condominio_id || !tipologia_id) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: \"Condominio e tipologia sono obbligatori\"\n            }, {\n                status: 400\n            });\n        }\n        const verificaData = {\n            condominio_id,\n            tipologia_id,\n            stato: \"bozza\",\n            dati_verifica: dati_verifica || {},\n            note: note || \"\",\n            email_inviata: false\n        };\n        const { data, error } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_1__.dbQuery.verifiche.create(verificaData);\n        if (error) {\n            console.error(\"Errore Supabase create verifica:\", error);\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: \"Errore nella creazione della verifica\"\n            }, {\n                status: 500\n            });\n        }\n        // Carica dati aggiuntivi per la notifica\n        const { data: condominio } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_1__.dbQuery.condomini.getById(condominio_id);\n        const { data: tipologia } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_1__.dbQuery.tipologie.getById(tipologia_id);\n        // Crea notifica automatica per nuova verifica\n        try {\n            const notificationManager = new _lib_notifications__WEBPACK_IMPORTED_MODULE_2__.NotificationManager();\n            await notificationManager.creaNotifica({\n                tipo: \"nuova_assegnazione\",\n                titolo: \"\\uD83D\\uDCDD Nuova Verifica Creata\",\n                messaggio: `Verifica ${tipologia?.nome || \"sconosciuta\"} creata per ${condominio?.nome || \"condominio\"}`,\n                utente_id: \"\",\n                priorita: \"media\",\n                condominio_id: condominio_id\n            });\n            console.log(\"✅ Notifica creata per nuova verifica:\", data.id);\n        } catch (notifError) {\n            console.error(\"⚠️ Errore nella creazione della notifica:\", notifError);\n        // Non bloccare l'operazione principale\n        }\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true,\n            data: data,\n            message: \"Verifica creata con successo\"\n        }, {\n            status: 201\n        });\n    } catch (error) {\n        console.error(\"Errore POST verifiche:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: false,\n            error: \"Errore nella creazione della verifica\"\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/app/api/verifiche/route.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/notifications.ts":
/*!**********************************!*\
  !*** ./src/lib/notifications.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NotificationManager: () => (/* binding */ NotificationManager),\n/* harmony export */   controllaScadenzeLavorazioni: () => (/* binding */ controllaScadenzeLavorazioni),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   getAdminUsers: () => (/* binding */ getAdminUsers)\n/* harmony export */ });\n/* harmony import */ var _lib_supabase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/lib/supabase */ \"(rsc)/./src/lib/supabase.ts\");\n/**\n * Sistema di gestione notifiche real-time\n * Gestisce creazione, invio e persistenza delle notifiche\n */ \n/**\n * Classe per gestione notifiche centralizzata\n */ class NotificationManager {\n    static getInstance() {\n        if (!NotificationManager.instance) {\n            NotificationManager.instance = new NotificationManager();\n        }\n        return NotificationManager.instance;\n    }\n    /**\n   * Crea una nuova notifica nel database\n   */ async creaNotifica(datiNotifica) {\n        try {\n            const nuovaNotifica = {\n                ...datiNotifica,\n                letta: false,\n                data_creazione: new Date().toISOString()\n            };\n            console.log(\"\\uD83D\\uDCE2 Creando notifica:\", nuovaNotifica);\n            const { data, error } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"notifiche\").insert([\n                nuovaNotifica\n            ]).select().single();\n            if (error) {\n                console.error(\"❌ Errore creazione notifica:\", error);\n                return null;\n            }\n            const notifica = data;\n            console.log(\"✅ Notifica creata:\", notifica.id);\n            // Invia notifica real-time ai subscriber\n            this.inviaNotificaRealTime(notifica);\n            // Invia push notification (non blocca se fallisce)\n            this.inviaPushNotification(notifica).catch((error)=>{\n                console.warn(\"⚠️ Errore invio push notification:\", error);\n            });\n            return notifica;\n        } catch (error) {\n            console.error(\"❌ Errore critico creazione notifica:\", error);\n            return null;\n        }\n    }\n    /**\n   * Notifica per scadenza lavorazione imminente\n   */ async notificaScadenzaImminente(lavorazione, giorniAnticipo) {\n        const dataScadenza = new Date(lavorazione.data_scadenza);\n        const dataNotifica = new Date();\n        dataNotifica.setDate(dataNotifica.getDate() + giorniAnticipo);\n        return await this.creaNotifica({\n            tipo: \"scadenza_imminente\",\n            titolo: `⏰ Scadenza lavorazione tra ${giorniAnticipo} giorni`,\n            messaggio: `La lavorazione \"${lavorazione.titolo}\" nel condominio scade il ${dataScadenza.toLocaleDateString(\"it-IT\")}`,\n            utente_id: lavorazione.user_id,\n            lavorazione_id: lavorazione.id,\n            condominio_id: lavorazione.condominio_id,\n            priorita: giorniAnticipo <= 1 ? \"urgente\" : giorniAnticipo <= 3 ? \"alta\" : \"media\",\n            data_scadenza: lavorazione.data_scadenza\n        });\n    }\n    /**\n   * Notifica per nuova assegnazione sopralluoghista\n   */ async notificaNuovaAssegnazione(lavorazione, utenteAssegnato) {\n        return await this.creaNotifica({\n            tipo: \"nuova_assegnazione\",\n            titolo: \"\\uD83D\\uDCCB Nuova lavorazione assegnata\",\n            messaggio: `Ti è stata assegnata la lavorazione \"${lavorazione.titolo}\" con priorità ${lavorazione.priorita}`,\n            utente_id: utenteAssegnato,\n            lavorazione_id: lavorazione.id,\n            condominio_id: lavorazione.condominio_id,\n            priorita: lavorazione.priorita === \"urgente\" ? \"urgente\" : \"alta\"\n        });\n    }\n    /**\n   * Notifica per lavorazione completata (per admin)\n   */ async notificaLavorazioneCompletata(lavorazione, adminUsers) {\n        const notifiche = [];\n        for (const adminId of adminUsers){\n            const notifica = await this.creaNotifica({\n                tipo: \"lavorazione_completata\",\n                titolo: \"✅ Lavorazione completata\",\n                messaggio: `La lavorazione \"${lavorazione.titolo}\" è stata completata dal sopralluoghista`,\n                utente_id: adminId,\n                lavorazione_id: lavorazione.id,\n                condominio_id: lavorazione.condominio_id,\n                priorita: \"media\"\n            });\n            if (notifica) notifiche.push(notifica);\n        }\n        return notifiche;\n    }\n    /**\n   * Crea reminder personalizzato\n   */ async creaReminderPersonalizzato(config, messaggio) {\n        return await this.creaNotifica({\n            tipo: \"reminder_personalizzato\",\n            titolo: `🔔 ${config.nome}`,\n            messaggio,\n            utente_id: config.utente_id,\n            priorita: \"media\"\n        });\n    }\n    /**\n   * Recupera notifiche non lette per utente\n   */ async getNotificheNonLette(utenteId) {\n        try {\n            const { data, error } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"notifiche\").select(\"*\").eq(\"utente_id\", utenteId).eq(\"letta\", false).order(\"data_creazione\", {\n                ascending: false\n            }).limit(50);\n            if (error) {\n                console.error(\"❌ Errore recupero notifiche:\", error);\n                return [];\n            }\n            return data || [];\n        } catch (error) {\n            console.error(\"❌ Errore critico recupero notifiche:\", error);\n            return [];\n        }\n    }\n    /**\n   * Marca notifica come letta\n   */ async marcaComeLetta(notificaId) {\n        try {\n            console.log(`📝 Marcando notifica come letta: ${notificaId}`);\n            const { data, error } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"notifiche\").update({\n                letta: true,\n                data_aggiornamento: new Date().toISOString()\n            }).eq(\"id\", notificaId).select();\n            if (error) {\n                console.error(\"❌ Errore DB marca come letta:\", error);\n                return false;\n            }\n            console.log(`✅ Notifica ${notificaId} aggiornata:`, data);\n            return true;\n        } catch (error) {\n            console.error(\"❌ Errore critico marca come letta:\", error);\n            return false;\n        }\n    }\n    /**\n   * Marca tutte le notifiche come lette per un utente\n   */ async marcaTutteComeLette(utenteId) {\n        try {\n            console.log(`📝 Marcando tutte le notifiche come lette per utente: ${utenteId}`);\n            const { data, error } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"notifiche\").update({\n                letta: true,\n                data_aggiornamento: new Date().toISOString()\n            }).eq(\"utente_id\", utenteId).eq(\"letta\", false).select();\n            if (error) {\n                console.error(\"❌ Errore DB marca tutte come lette:\", error);\n                return false;\n            }\n            console.log(`✅ ${data?.length || 0} notifiche marcate come lette per utente ${utenteId}`);\n            return true;\n        } catch (error) {\n            console.error(\"❌ Errore critico marca tutte come lette:\", error);\n            return false;\n        }\n    }\n    /**\n   * Sottoscrivi a notifiche real-time per un utente\n   */ subscribe(utenteId, callback) {\n        this.subscribers.set(utenteId, callback);\n        // Ritorna funzione di unsubscribe\n        return ()=>{\n            this.subscribers.delete(utenteId);\n        };\n    }\n    /**\n   * Invia notifica real-time ai subscriber\n   */ inviaNotificaRealTime(notifica) {\n        const callback = this.subscribers.get(notifica.utente_id);\n        if (callback) {\n            callback(notifica);\n        }\n    }\n    /**\n   * Invia push notification al dispositivo (se subscription attiva)\n   */ async inviaPushNotification(notifica) {\n        try {\n            console.log(`📲 Tentativo invio push per notifica ${notifica.id} a utente ${notifica.utente_id}`);\n            const response = await fetch(\"/api/push/send\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    utenteIds: [\n                        notifica.utente_id\n                    ],\n                    title: notifica.titolo,\n                    message: notifica.messaggio,\n                    url: \"/\",\n                    priorita: notifica.priorita,\n                    notificaId: notifica.id,\n                    lavorazioneId: notifica.lavorazione_id,\n                    condominioId: notifica.condominio_id\n                })\n            });\n            if (!response.ok) {\n                throw new Error(`HTTP ${response.status}`);\n            }\n            const result = await response.json();\n            console.log(`✅ Push inviato: ${result.sent}/${result.total}`);\n        } catch (error) {\n            // Non blocca, solo log\n            console.warn(`⚠️ Push notification non inviato per ${notifica.id}:`, error);\n        }\n    }\n    constructor(){\n        this.subscribers = new Map();\n    }\n}\n/**\n * Utility per controllo scadenze lavorazioni\n */ async function controllaScadenzeLavorazioni() {\n    console.log(\"\\uD83D\\uDD0D Controllo scadenze lavorazioni...\");\n    try {\n        const notificationManager = NotificationManager.getInstance();\n        // Query lavorazioni attive con scadenza nei prossimi giorni\n        const dataOggi = new Date();\n        const tra7Giorni = new Date();\n        tra7Giorni.setDate(dataOggi.getDate() + 7);\n        const { data: lavorazioni, error } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"lavorazioni\").select(`\n        id, titolo, data_scadenza, user_id, condominio_id, priorita,\n        condomini!inner(nome)\n      `).in(\"stato\", [\n            \"da_eseguire\",\n            \"in_corso\",\n            \"riaperta\"\n        ]).gte(\"data_scadenza\", dataOggi.toISOString()).lte(\"data_scadenza\", tra7Giorni.toISOString());\n        if (error) {\n            console.error(\"❌ Errore query scadenze:\", error);\n            return;\n        }\n        if (!lavorazioni || lavorazioni.length === 0) {\n            console.log(\"✅ Nessuna scadenza imminente\");\n            return;\n        }\n        console.log(`⏰ Trovate ${lavorazioni.length} lavorazioni in scadenza`);\n        // Crea notifiche per ogni lavorazione\n        for (const lavorazione of lavorazioni){\n            const dataScadenza = new Date(lavorazione.data_scadenza);\n            const giorniRimanenti = Math.ceil((dataScadenza.getTime() - dataOggi.getTime()) / (1000 * 60 * 60 * 24));\n            // Notifica a 7, 3, 1 giorni e il giorno stesso\n            if ([\n                7,\n                3,\n                1,\n                0\n            ].includes(giorniRimanenti)) {\n                await notificationManager.notificaScadenzaImminente(lavorazione, giorniRimanenti);\n            }\n        }\n    } catch (error) {\n        console.error(\"❌ Errore critico controllo scadenze:\", error);\n    }\n}\n/**\n * Utility per ottenere admin users\n */ async function getAdminUsers() {\n    try {\n        const { data: admins, error } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"users\").select(\"id\").eq(\"role\", \"admin\").eq(\"attivo\", true);\n        if (error) {\n            console.error(\"❌ Errore recupero admin:\", error);\n            return [];\n        }\n        return admins?.map((admin)=>admin.id) || [];\n    } catch (error) {\n        console.error(\"❌ Errore critico recupero admin:\", error);\n        return [];\n    }\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (NotificationManager);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/notifications.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/supabase.ts":
/*!*****************************!*\
  !*** ./src/lib/supabase.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   dbQuery: () => (/* binding */ dbQuery),\n/* harmony export */   supabase: () => (/* binding */ supabase)\n/* harmony export */ });\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @supabase/supabase-js */ \"(rsc)/./node_modules/@supabase/supabase-js/dist/module/index.js\");\n\nconst supabaseUrl = \"https://ygvlcikgzkoaxlrmwsnv.supabase.co\" || 0;\nconst supabaseKey = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InlndmxjaWtnemtvYXhscm13c252Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTkzOTgzMzgsImV4cCI6MjA3NDk3NDMzOH0.Zc6eihyJiTZy6WicV6MyIgZ1Oq7GwzRYR01zovQHFPs\" || 0;\nconst supabase = (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__.createClient)(supabaseUrl, supabaseKey);\n// Funzioni helper per il database\nconst dbQuery = {\n    // Condomini\n    condomini: {\n        getAll: ()=>supabase.from(\"condomini\").select(\"*\").order(\"data_inserimento\", {\n                ascending: false\n            }),\n        create: (data)=>supabase.from(\"condomini\").insert([\n                data\n            ]).select().single(),\n        getById: (id)=>supabase.from(\"condomini\").select(\"*\").eq(\"id\", id).single(),\n        update: (id, data)=>supabase.from(\"condomini\").update(data).eq(\"id\", id).select().single(),\n        delete: (id)=>supabase.from(\"condomini\").delete().eq(\"id\", id)\n    },\n    // Tipologie\n    tipologie: {\n        getAll: ()=>supabase.from(\"tipologie_verifiche\").select(\"*\").order(\"data_creazione\", {\n                ascending: false\n            }),\n        create: (data)=>supabase.from(\"tipologie_verifiche\").insert([\n                data\n            ]).select().single(),\n        getById: (id)=>supabase.from(\"tipologie_verifiche\").select(\"*\").eq(\"id\", id).single(),\n        update: (id, data)=>supabase.from(\"tipologie_verifiche\").update(data).eq(\"id\", id).select().single(),\n        delete: (id)=>supabase.from(\"tipologie_verifiche\").delete().eq(\"id\", id)\n    },\n    // Verifiche\n    verifiche: {\n        getAll: ()=>supabase.from(\"verifiche\").select(\"*\").order(\"data_creazione\", {\n                ascending: false\n            }),\n        create: (data)=>supabase.from(\"verifiche\").insert([\n                data\n            ]).select().single(),\n        getById: (id)=>supabase.from(\"verifiche\").select(\"*\").eq(\"id\", id).single(),\n        update: (id, data)=>supabase.from(\"verifiche\").update(data).eq(\"id\", id).select().single(),\n        delete: (id)=>supabase.from(\"verifiche\").delete().eq(\"id\", id)\n    },\n    // Lavorazioni\n    lavorazioni: {\n        getAll: ()=>supabase.from(\"lavorazioni\").select(\"*\").order(\"data_apertura\", {\n                ascending: false\n            }),\n        create: (data)=>supabase.from(\"lavorazioni\").insert([\n                data\n            ]).select().single(),\n        getById: (id)=>supabase.from(\"lavorazioni\").select(\"*\").eq(\"id\", id).single(),\n        update: (id, data)=>supabase.from(\"lavorazioni\").update(data).eq(\"id\", id).select().single(),\n        delete: (id)=>supabase.from(\"lavorazioni\").delete().eq(\"id\", id)\n    },\n    // Users\n    users: {\n        getAll: ()=>supabase.from(\"users\").select(\"id, username, email, role, nome, cognome, telefono, attivo, created_at, last_login, approved_at\").order(\"created_at\", {\n                ascending: false\n            }),\n        create: (data)=>supabase.from(\"users\").insert([\n                data\n            ]).select(\"id, username, email, role, nome, cognome, telefono, attivo, created_at\").single(),\n        getById: (id)=>supabase.from(\"users\").select(\"id, username, email, role, nome, cognome, telefono, attivo, created_at, last_login, approved_at\").eq(\"id\", id).single(),\n        getByIdFull: (id)=>supabase.from(\"users\").select(\"*\").eq(\"id\", id).single(),\n        getByUsername: (username)=>supabase.from(\"users\").select(\"*\").eq(\"username\", username).single(),\n        getByEmail: (email)=>supabase.from(\"users\").select(\"*\").eq(\"email\", email).single(),\n        update: (id, data)=>supabase.from(\"users\").update(data).eq(\"id\", id).select(\"id, username, email, role, nome, cognome, telefono, attivo, created_at, last_login, approved_at\").single(),\n        updateLastLogin: (id)=>supabase.from(\"users\").update({\n                last_login: new Date().toISOString()\n            }).eq(\"id\", id),\n        delete: (id)=>supabase.from(\"users\").delete().eq(\"id\", id)\n    },\n    // Note Personali\n    note_personali: {\n        getAll: ()=>supabase.from(\"note_personali\").select(\"*\").order(\"data_creazione\", {\n                ascending: false\n            }),\n        getAllByUser: (utente_id)=>supabase.from(\"note_personali\").select(\"*\").eq(\"utente_id\", utente_id).order(\"data_creazione\", {\n                ascending: false\n            }),\n        create: (data)=>supabase.from(\"note_personali\").insert([\n                data\n            ]).select().single(),\n        getById: (id)=>supabase.from(\"note_personali\").select(\"*\").eq(\"id\", id).single(),\n        update: (id, data)=>supabase.from(\"note_personali\").update(data).eq(\"id\", id).select().single(),\n        delete: (id)=>supabase.from(\"note_personali\").delete().eq(\"id\", id)\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/supabase.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/@supabase"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fverifiche%2Froute&page=%2Fapi%2Fverifiche%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fverifiche%2Froute.ts&appDir=%2FUsers%2Fakirayouky%2FDesktop%2FSiti%2FCondomini%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fakirayouky%2FDesktop%2FSiti%2FCondomini&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();